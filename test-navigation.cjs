const { chromium } = require('playwright');

async function testFinancialNavigation() {
  console.log('üöÄ Starting navigation test...');
  
  const browser = await chromium.launch({ headless: false });
  const context = await browser.newContext();
  const page = await context.newPage();

  try {
    // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    console.log('üìç Navigate to main page');
    await page.goto('http://localhost:5179');
    await page.waitForTimeout(2000);

    // –ö–ª–∏–∫–∞–µ–º –Ω–∞ "–§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏" –≤ –ª–µ–≤–æ–º –º–µ–Ω—é
    console.log('üîç Click on Financial Indicators in menu');
    
    // –°–Ω–∞—á–∞–ª–∞ —Ä–∞—Å–∫—Ä–æ–µ–º —Ä–∞–∑–¥–µ–ª "–ö–æ–º–º–µ—Ä—Ü–∏—è" –µ—Å–ª–∏ –æ–Ω –∑–∞–∫—Ä—ã—Ç
    const commerceSection = await page.locator('span:has-text("–ö–æ–º–º–µ—Ä—Ü–∏—è")').first();
    await commerceSection.click();
    await page.waitForTimeout(1000);

    // –ö–ª–∏–∫–∞–µ–º –Ω–∞ "–§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏"
    const financialLink = await page.locator('a[href="/financial"]');
    await financialLink.click();
    await page.waitForTimeout(2000);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º URL
    const currentURL = page.url();
    console.log('‚úÖ Current URL:', currentURL);
    
    if (currentURL.includes('/financial')) {
      console.log('‚úÖ Navigation to financial page successful!');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –±–ª–æ–∫–∞ –≤—ã–±–æ—Ä–∞ —Ç–µ–Ω–¥–µ—Ä–∞
      const tenderSelector = await page.locator('text=–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–Ω–¥–µ—Ä').first();
      if (await tenderSelector.isVisible()) {
        console.log('‚úÖ Tender selection block is visible');
      } else {
        console.log('‚ùå Tender selection block is NOT visible');
      }
      
    } else {
      console.log('‚ùå Navigation failed. Expected /financial, got:', currentURL);
    }

    // –ü–æ–ø—Ä–æ–±—É–µ–º –≤—ã–±—Ä–∞—Ç—å —Ç–µ–Ω–¥–µ—Ä –µ—Å–ª–∏ –µ—Å—Ç—å
    console.log('üîç Looking for tender selection...');
    
    const selectElement = await page.locator('div.ant-select').first();
    if (await selectElement.isVisible()) {
      await selectElement.click();
      await page.waitForTimeout(1000);
      
      // –í—ã–±–µ—Ä–µ–º –ø–µ—Ä–≤—ã–π —Ç–µ–Ω–¥–µ—Ä –∏–∑ —Å–ø–∏—Å–∫–∞
      const firstOption = await page.locator('.ant-select-item').first();
      if (await firstOption.isVisible()) {
        await firstOption.click();
        await page.waitForTimeout(5000); // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –æ–∂–∏–¥–∞–Ω–∏–µ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ MarkupEditor
        console.log('‚úÖ Selected first tender');
        
        // –ñ–¥–µ–º –ø–æ—è–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞
        await page.waitForSelector('.financial-action-btn', { timeout: 10000 });
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ—è–≤–∏–ª–∞—Å—å –ª–∏ –∫–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É"  
        console.log('üîç Looking for Back button...');
        const backButton = await page.locator('button:has-text("–ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É")');
        if (await backButton.isVisible()) {
          console.log('‚úÖ Back button is visible!');
          await backButton.click();
          await page.waitForTimeout(2000);
          
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤–µ—Ä–Ω—É–ª–∏—Å—å –∫ –≤—ã–±–æ—Ä—É —Ç–µ–Ω–¥–µ—Ä–∞
          const tenderSelectorAgain = await page.locator('text=–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–Ω–¥–µ—Ä').first();
          if (await tenderSelectorAgain.isVisible()) {
            console.log('‚úÖ Successfully returned to tender selection!');
          } else {
            console.log('‚ùå Did not return to tender selection');
          }
        } else {
          console.log('‚ùå Back button is NOT visible');
        }
        
        // –¢–∞–∫–∂–µ –ø—Ä–æ–≤–µ—Ä–∏–º –∫–ª–∏–∫ –ø–æ –º–µ–Ω—é
        console.log('üîç Test menu click navigation');
        await financialLink.click();
        await page.waitForTimeout(2000);
        
        const newURL = page.url();
        console.log('üìç URL after menu click:', newURL);
      }
    }

  } catch (error) {
    console.error('‚ùå Test error:', error);
  } finally {
    await page.waitForTimeout(3000); // Keep browser open for 3 seconds to see result
    await browser.close();
  }
}

testFinancialNavigation();