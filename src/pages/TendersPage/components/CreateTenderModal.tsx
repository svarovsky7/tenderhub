import React from 'react';
import { Modal, Form, Input, DatePicker, Select, Row, Col, Button } from 'antd';
import type { CreateTenderModalProps, TenderInsert } from '../types';

const CreateTenderModal: React.FC<CreateTenderModalProps> = ({
  visible,
  loading,
  onCancel,
  onSubmit
}) => {
  const [form] = Form.useForm();
  
  console.log('üöÄ CreateTenderModal component rendered');
  console.log('üëÅÔ∏è Modal visible:', visible);
  console.log('‚è≥ Loading state:', loading);

  const handleSubmit = async (values: any) => {
    console.log('üìù Form submitted with values:', values);
    
    try {
      const tenderData: TenderInsert = {
        title: values.title,
        description: values.description,
        client_name: values.client_name,
        tender_number: values.tender_number,
        submission_deadline: values.submission_deadline?.format('YYYY-MM-DD HH:mm:ss'),
        estimated_value: values.estimated_value,
        status: values.status || 'draft'
      };

      console.log('üîÑ Calling onSubmit with processed data:', tenderData);
      await onSubmit(tenderData);
      
      console.log('‚úÖ Form submission successful, resetting form');
      form.resetFields();
    } catch (error) {
      console.error('‚ùå Form submission error:', error);
    }
  };

  const handleCancel = () => {
    console.log('‚ùå Modal cancelled');
    form.resetFields();
    onCancel();
  };

  return (
    <Modal
      title="–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —Ç–µ–Ω–¥–µ—Ä"
      open={visible}
      onCancel={handleCancel}
      footer={null}
      width={700}
    >
      <Form
        form={form}
        layout="vertical"
        onFinish={handleSubmit}
        className="mt-4"
      >
        <Row gutter={16}>
          <Col span={16}>
            <Form.Item
              name="title"
              label="–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–µ–Ω–¥–µ—Ä–∞"
              rules={[{ required: true, message: '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ' }]}
            >
              <Input placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–µ–Ω–¥–µ—Ä–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞" />
            </Form.Item>
          </Col>
          <Col span={8}>
            <Form.Item
              name="tender_number"
              label="–ù–æ–º–µ—Ä —Ç–µ–Ω–¥–µ—Ä–∞"
              rules={[{ required: true, message: '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä' }]}
            >
              <Input placeholder="T-2024-001" />
            </Form.Item>
          </Col>
        </Row>

        <Form.Item
          name="description"
          label="–û–ø–∏—Å–∞–Ω–∏–µ"
        >
          <Input.TextArea rows={3} placeholder="–ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞" />
        </Form.Item>

        <Form.Item
          name="client_name"
          label="–ó–∞–∫–∞–∑—á–∏–∫"
          rules={[{ required: true, message: '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∑–∞–∫–∞–∑—á–∏–∫–∞' }]}
        >
          <Input placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏-–∑–∞–∫–∞–∑—á–∏–∫–∞" />
        </Form.Item>

        <Row gutter={16}>
          <Col span={8}>
            <Form.Item
              name="submission_deadline"
              label="–°—Ä–æ–∫ –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–∫–∏"
            >
              <DatePicker 
                showTime 
                className="w-full"
                placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è"
              />
            </Form.Item>
          </Col>
          <Col span={8}>
            <Form.Item
              name="estimated_value"
              label="–û—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–æ—á–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å"
            >
              <Input 
                type="number" 
                placeholder="0"
                addonAfter="‚ÇΩ"
              />
            </Form.Item>
          </Col>
          <Col span={8}>
            <Form.Item
              name="status"
              label="–°—Ç–∞—Ç—É—Å"
              initialValue="draft"
            >
              <Select>
                <Select.Option value="draft">–ß–µ—Ä–Ω–æ–≤–∏–∫</Select.Option>
                <Select.Option value="active">–ê–∫—Ç–∏–≤–Ω—ã–π</Select.Option>
              </Select>
            </Form.Item>
          </Col>
        </Row>

        <div className="flex justify-end gap-2 pt-4 border-t">
          <Button onClick={handleCancel}>
            –û—Ç–º–µ–Ω–∞
          </Button>
          <Button 
            type="primary" 
            htmlType="submit"
            loading={loading}
          >
            –°–æ–∑–¥–∞—Ç—å —Ç–µ–Ω–¥–µ—Ä
          </Button>
        </div>
      </Form>
    </Modal>
  );
};

export default CreateTenderModal;