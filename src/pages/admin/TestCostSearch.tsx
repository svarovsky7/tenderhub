import React, { useState } from 'react';
import { Card, Typography, Space, Button, Divider, message } from 'antd';
import { CostCascadeSelector } from '../../components/common';
import { searchCostNodes } from '../../lib/supabase/api/cost-nodes';

const { Title, Text } = Typography;

const TestCostSearch: React.FC = () => {
  const [selectedCost, setSelectedCost] = useState<{
    id: string | null;
    displayName: string;
  }>({ id: null, displayName: '' });
  
  const [searchResults, setSearchResults] = useState<any[]>([]);
  
  const handleTestSearch = async () => {
    console.log('üöÄ Testing direct search API');
    const testTerms = ['–±–µ—Ç–æ–Ω', '–∞—Ä–º–∞—Ç—É—Ä', '—à—Ç—É–∫–∞—Ç—É—Ä', '–º–æ—Å–∫–≤–∞'];
    
    for (const term of testTerms) {
      console.log(`üîç Searching for: ${term}`);
      const { data, error } = await searchCostNodes(term);
      
      if (error) {
        console.error('‚ùå Search error:', error);
        message.error(`–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –¥–ª—è "${term}"`);
      } else {
        console.log(`‚úÖ Found ${data?.length || 0} results for "${term}"`);
        if (data && data.length > 0) {
          console.log('First result:', data[0]);
        }
      }
    }
    
    // Show results for last term
    const { data } = await searchCostNodes('–º–æ—Å–∫–≤–∞');
    setSearchResults(data || []);
  };
  
  return (
    <div style={{ padding: '24px', maxWidth: '1200px', margin: '0 auto' }}>
      <Card>
        <Title level={3}>–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∏—Å–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∑–∞—Ç—Ä–∞—Ç</Title>
        
        <Divider />
        
        <Space direction="vertical" size="large" style={{ width: '100%' }}>
          <div>
            <Title level={5}>1. –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Å —Ä–µ–∂–∏–º–æ–º –ø–æ–∏—Å–∫–∞ (allowSearch=true)</Title>
            <Text type="secondary">
              –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å –≤ –≤—ã–ø–∞–¥–∞—é—â–µ–º –º–µ–Ω—é –¥–ª—è —Å–º–µ–Ω—ã —Ä–µ–∂–∏–º–∞ –º–µ–∂–¥—É –∫–∞—Å–∫–∞–¥–Ω—ã–º –≤—ã–±–æ—Ä–æ–º –∏ –ø–æ–∏—Å–∫–æ–º
            </Text>
            <div style={{ marginTop: '16px', maxWidth: '500px' }}>
              <CostCascadeSelector
                value={selectedCost.id}
                onChange={(id, displayName) => {
                  console.log('Selected:', { id, displayName });
                  setSelectedCost({ id, displayName });
                  message.success(`–í—ã–±—Ä–∞–Ω–æ: ${displayName}`);
                }}
                placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –∏–ª–∏ –Ω–∞–π–¥–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∑–∞—Ç—Ä–∞—Ç"
                allowSearch={true}
              />
            </div>
            {selectedCost.id && (
              <div style={{ marginTop: '16px' }}>
                <Text strong>–í—ã–±—Ä–∞–Ω–æ:</Text>
                <br />
                <Text code>ID: {selectedCost.id}</Text>
                <br />
                <Text>{selectedCost.displayName}</Text>
              </div>
            )}
          </div>
          
          <Divider />
          
          <div>
            <Title level={5}>2. –ü—Ä—è–º–æ–π —Ç–µ—Å—Ç API –ø–æ–∏—Å–∫–∞</Title>
            <Button type="primary" onClick={handleTestSearch}>
              –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ–∏—Å–∫
            </Button>
            
            {searchResults.length > 0 && (
              <div style={{ marginTop: '16px' }}>
                <Text strong>–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞ –¥–ª—è "–º–æ—Å–∫–≤–∞":</Text>
                <ul>
                  {searchResults.slice(0, 10).map((result, idx) => (
                    <li key={idx}>
                      <Text code>{result.detail_name}</Text> - {result.display_name}
                    </li>
                  ))}
                </ul>
              </div>
            )}
          </div>
          
          <Divider />
          
          <div>
            <Title level={5}>3. –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –±–µ–∑ –ø–æ–∏—Å–∫–∞ (allowSearch=false)</Title>
            <Text type="secondary">
              –¢–æ–ª—å–∫–æ –∫–∞—Å–∫–∞–¥–Ω—ã–π –≤—ã–±–æ—Ä, –±–µ–∑ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø–æ–∏—Å–∫–∞
            </Text>
            <div style={{ marginTop: '16px', maxWidth: '500px' }}>
              <CostCascadeSelector
                placeholder="–¢–æ–ª—å–∫–æ –∫–∞—Å–∫–∞–¥–Ω—ã–π –≤—ã–±–æ—Ä"
                allowSearch={false}
              />
            </div>
          </div>
        </Space>
      </Card>
    </div>
  );
};

export default TestCostSearch;