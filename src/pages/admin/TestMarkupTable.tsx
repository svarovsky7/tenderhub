import React, { useState } from 'react';
import { Card, Button, Typography, Space, message, Alert } from 'antd';
import { supabase } from '../../lib/supabase/client';

const { Title, Text, Paragraph } = Typography;

const TestMarkupTable: React.FC = () => {
  const [creating, setCreating] = useState(false);
  const [testing, setTesting] = useState(false);
  const [tableExists, setTableExists] = useState(false);

  const createTable = async () => {
    setCreating(true);
    try {
      console.log('üöÄ Creating tender_markup_percentages table...');
      
      // –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É —á–µ—Ä–µ–∑ raw SQL
      const { data, error } = await supabase.rpc('exec', {
        sql: `
          CREATE TABLE IF NOT EXISTS public.tender_markup_percentages (
            id uuid NOT NULL DEFAULT uuid_generate_v4(),
            tender_id uuid NOT NULL,
            profit_margin numeric(5,2) DEFAULT 15.00,
            materials_markup numeric(5,2) DEFAULT 10.00,
            works_markup numeric(5,2) DEFAULT 20.00,
            submaterials_markup numeric(5,2) DEFAULT 15.00,
            subworks_markup numeric(5,2) DEFAULT 18.00,
            overhead_percentage numeric(5,2) DEFAULT 5.00,
            contingency_percentage numeric(5,2) DEFAULT 3.00,
            risk_adjustment numeric(5,2) DEFAULT 2.00,
            tax_percentage numeric(5,2) DEFAULT 20.00,
            insurance_percentage numeric(5,2) DEFAULT 1.50,
            notes text,
            is_active boolean DEFAULT true,
            created_at timestamp with time zone NOT NULL DEFAULT now(),
            updated_at timestamp with time zone NOT NULL DEFAULT now(),
            CONSTRAINT tender_markup_percentages_pkey PRIMARY KEY (id)
          );
        `
      });

      if (error) {
        console.error('‚ùå Error creating table:', error);
        message.error(`–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã: ${error.message}`);
        return;
      }

      message.success('‚úÖ –¢–∞–±–ª–∏—Ü–∞ tender_markup_percentages —Å–æ–∑–¥–∞–Ω–∞!');
      console.log('‚úÖ Table created successfully:', data);
      
      // –ü—Ä–æ–≤–µ—Ä–∏–º, —á—Ç–æ —Ç–∞–±–ª–∏—Ü–∞ —Å–æ–∑–¥–∞–ª–∞—Å—å
      await testTableExists();

    } catch (error: any) {
      console.error('‚ùå Error:', error);
      message.error(`–û—à–∏–±–∫–∞: ${error.message}`);
    } finally {
      setCreating(false);
    }
  };

  const addForeignKey = async () => {
    try {
      console.log('üöÄ Adding foreign key constraint...');
      
      const { data, error } = await supabase.rpc('exec', {
        sql: `
          ALTER TABLE public.tender_markup_percentages 
          ADD CONSTRAINT IF NOT EXISTS tender_markup_percentages_tender_id_fkey 
          FOREIGN KEY (tender_id) REFERENCES public.tenders(id) ON DELETE CASCADE;
        `
      });

      if (error) {
        console.error('‚ùå Error adding foreign key:', error);
        message.error(`–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤–Ω–µ—à–Ω–µ–≥–æ –∫–ª—é—á–∞: ${error.message}`);
        return;
      }

      message.success('‚úÖ –í–Ω–µ—à–Ω–∏–π –∫–ª—é—á –¥–æ–±–∞–≤–ª–µ–Ω!');
      console.log('‚úÖ Foreign key added successfully:', data);

    } catch (error: any) {
      console.error('‚ùå Error:', error);
      message.error(`–û—à–∏–±–∫–∞: ${error.message}`);
    }
  };

  const testTableExists = async () => {
    setTesting(true);
    try {
      console.log('üöÄ Testing table existence...');
      
      // –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã
      const { data, error } = await supabase
        .from('tender_markup_percentages')
        .select('*')
        .limit(1);

      if (error) {
        console.error('‚ùå Table test failed:', error);
        setTableExists(false);
        message.warning('–¢–∞–±–ª–∏—Ü–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞');
        return;
      }

      setTableExists(true);
      message.success('‚úÖ –¢–∞–±–ª–∏—Ü–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ –¥–æ—Å—Ç—É–ø–Ω–∞!');
      console.log('‚úÖ Table exists and accessible:', data);

    } catch (error: any) {
      console.error('‚ùå Error:', error);
      setTableExists(false);
      message.error(`–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏: ${error.message}`);
    } finally {
      setTesting(false);
    }
  };

  const insertTestRecord = async () => {
    try {
      console.log('üöÄ Inserting test record...');
      
      // –ü–æ–ª—É—á–∏–º –ø–µ—Ä–≤—ã–π —Ç–µ–Ω–¥–µ—Ä –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
      const { data: tenders, error: tendersError } = await supabase
        .from('tenders')
        .select('id')
        .limit(1);

      if (tendersError || !tenders?.length) {
        message.error('–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ç–µ–Ω–¥–µ—Ä–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');
        return;
      }

      const { data, error } = await supabase
        .from('tender_markup_percentages')
        .insert({
          tender_id: tenders[0].id,
          profit_margin: 15.00,
          materials_markup: 10.00,
          works_markup: 20.00,
          notes: '–¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–ø–∏—Å—å'
        })
        .select();

      if (error) {
        console.error('‚ùå Error inserting test record:', error);
        message.error(`–û—à–∏–±–∫–∞ –≤—Å—Ç–∞–≤–∫–∏: ${error.message}`);
        return;
      }

      message.success('‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–ø–∏—Å—å —Å–æ–∑–¥–∞–Ω–∞!');
      console.log('‚úÖ Test record inserted:', data);

    } catch (error: any) {
      console.error('‚ùå Error:', error);
      message.error(`–û—à–∏–±–∫–∞: ${error.message}`);
    }
  };

  return (
    <div style={{ padding: '24px' }}>
      <Title level={2}>–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã tender_markup_percentages</Title>
      
      <Alert
        message="–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —Å–æ–∑–¥–∞–Ω–∏—é —Ç–∞–±–ª–∏—Ü—ã"
        description="–≠—Ç–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –ø–æ–º–æ–∂–µ—Ç —Å–æ–∑–¥–∞—Ç—å –∏ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤ –Ω–∞–∫—Ä—É—Ç–æ–∫ —Ç–µ–Ω–¥–µ—Ä–æ–≤."
        type="info"
        style={{ marginBottom: 24 }}
      />

      <Space direction="vertical" size="large" style={{ width: '100%' }}>
        <Card title="1. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã" size="small">
          <Paragraph>
            –°–æ–∑–¥–∞–µ—Ç —Ç–∞–±–ª–∏—Ü—É <Text code>tender_markup_percentages</Text> —Å–æ –≤—Å–µ–º–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–º–∏ –ø–æ–ª—è–º–∏.
          </Paragraph>
          <Button 
            type="primary" 
            onClick={createTable} 
            loading={creating}
          >
            –°–æ–∑–¥–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É
          </Button>
        </Card>

        <Card title="2. –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤–Ω–µ—à–Ω–µ–≥–æ –∫–ª—é—á–∞" size="small">
          <Paragraph>
            –î–æ–±–∞–≤–ª—è–µ—Ç —Å–≤—è–∑—å —Å —Ç–∞–±–ª–∏—Ü–µ–π tenders.
          </Paragraph>
          <Button 
            onClick={addForeignKey}
          >
            –î–æ–±–∞–≤–∏—Ç—å –≤–Ω–µ—à–Ω–∏–π –∫–ª—é—á
          </Button>
        </Card>

        <Card title="3. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü—ã" size="small">
          <Paragraph>
            –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ —Ç–∞–±–ª–∏—Ü–∞ —Å–æ–∑–¥–∞–Ω–∞ –∏ –¥–æ—Å—Ç—É–ø–Ω–∞.
          </Paragraph>
          <Space>
            <Button 
              onClick={testTableExists} 
              loading={testing}
            >
              –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É
            </Button>
            {tableExists && (
              <Text type="success">‚úÖ –¢–∞–±–ª–∏—Ü–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç</Text>
            )}
          </Space>
        </Card>

        <Card title="4. –¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–ø–∏—Å—å" size="small">
          <Paragraph>
            –°–æ–∑–¥–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–ø–∏—Å—å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏.
          </Paragraph>
          <Button 
            onClick={insertTestRecord}
            disabled={!tableExists}
          >
            –°–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–ø–∏—Å—å
          </Button>
        </Card>
      </Space>
    </div>
  );
};

export default TestMarkupTable;