import type { TenderMarkupPercentages } from '../lib/supabase/types/tender-markup';

/**
 * –†–∞—Å—á–µ—Ç –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —Ä–∞–±–æ—Ç—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤ –Ω–∞–∫—Ä—É—Ç–æ–∫
 * 
 * @param baseCost - –ë–∞–∑–æ–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ä–∞–±–æ—Ç—ã (–†–∞–±–æ—Ç–∞ –ü–ó = unit_rate * quantity)
 * @param markups - –ü—Ä–æ—Ü–µ–Ω—Ç—ã –Ω–∞–∫—Ä—É—Ç–æ–∫ –∏–∑ –ë–î
 * @returns –ö–æ–º–º–µ—Ä—á–µ—Å–∫–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ä–∞–±–æ—Ç—ã
 */
export function calculateWorkCommercialCost(
  baseCost: number,
  markups: TenderMarkupPercentages
): number {
  console.log('üöÄ –†–∞—Å—á–µ—Ç –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —Ä–∞–±–æ—Ç—ã');
  console.log('üìä –ë–∞–∑–æ–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å (–†–∞–±–æ—Ç–∞ –ü–ó):', baseCost);
  console.log('üìä –ü—Ä–æ—Ü–µ–Ω—Ç—ã –Ω–∞–∫—Ä—É—Ç–æ–∫:', markups);

  // 1. –°–ª—É–∂–±–∞ –º–µ—Ö–∞–Ω–∏–∑–∞—Ü–∏–∏ (–°–ú)
  const mechanizationCost = baseCost * (markups.mechanization_service / 100);
  console.log('1Ô∏è‚É£ –°–ª—É–∂–±–∞ –º–µ—Ö–∞–Ω–∏–∑–∞—Ü–∏–∏:', mechanizationCost, `(${markups.mechanization_service}%)`);

  // 2. –ú–ë–ü+–ì–°–ú
  const mbpGsmCost = baseCost * (markups.mbp_gsm / 100);
  console.log('2Ô∏è‚É£ –ú–ë–ü+–ì–°–ú:', mbpGsmCost, `(${markups.mbp_gsm}%)`);

  // 3. –ì–∞—Ä–∞–Ω—Ç–∏–π–Ω—ã–π –ø–µ—Ä–∏–æ–¥
  const warrantyCost = baseCost * (markups.warranty_period / 100);
  console.log('3Ô∏è‚É£ –ì–∞—Ä–∞–Ω—Ç–∏–π–Ω—ã–π –ø–µ—Ä–∏–æ–¥:', warrantyCost, `(${markups.warranty_period}%)`);

  // 4. –†–∞–±–æ—Ç–∞ 1,6 = (–†–∞–±–æ—Ç–∞ –ü–ó + –†–∞–±–æ—Ç–∞ –°–ú) * 1.6
  // works_16_markup —Å–æ–¥–µ—Ä–∂–∏—Ç –ø—Ä–æ—Ü–µ–Ω—Ç —É–≤–µ–ª–∏—á–µ–Ω–∏—è (60% –æ–∑–Ω–∞—á–∞–µ—Ç –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç 1.6)
  const work16 = (baseCost + mechanizationCost) * (1 + markups.works_16_markup / 100);
  console.log('4Ô∏è‚É£ –†–∞–±–æ—Ç–∞ 1,6:', work16, `(–∫–æ—ç—Ñ ${1 + markups.works_16_markup / 100})`);

  // 5. –†–∞–±–æ—Ç—ã –†–æ—Å—Ç = (–†–∞–±–æ—Ç–∞ 1,6 + –ú–ë–ü+–ì–°–ú) * (1 + –ø—Ä–æ—Ü–µ–Ω—Ç)
  const worksCostGrowth = (work16 + mbpGsmCost) * (1 + markups.works_cost_growth / 100);
  console.log('5Ô∏è‚É£ –†–∞–±–æ—Ç—ã –†–æ—Å—Ç:', worksCostGrowth, `(+${markups.works_cost_growth}%)`);

  // 6. –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω—ã–µ = (–†–∞–±–æ—Ç–∞ 1,6 + –ú–ë–ü+–ì–°–ú) * (1 + –ø—Ä–æ—Ü–µ–Ω—Ç)
  const contingencyCosts = (work16 + mbpGsmCost) * (1 + markups.contingency_costs / 100);
  console.log('6Ô∏è‚É£ –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω—ã–µ –∑–∞—Ç—Ä–∞—Ç—ã:', contingencyCosts, `(+${markups.contingency_costs}%)`);

  // 7. –û–û–ó = (–†–∞–±–æ—Ç—ã –†–æ—Å—Ç + –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω—ã–µ - –†–∞–±–æ—Ç–∞ 1,6 - –ú–ë–ü-–ì–°–ú) * (1 + –ø—Ä–æ—Ü–µ–Ω—Ç)
  const ooz = (worksCostGrowth + contingencyCosts - work16 - mbpGsmCost) * 
              (1 + markups.overhead_own_forces / 100);
  console.log('7Ô∏è‚É£ –û–û–ó —Å–æ–±—Å—Ç–≤. —Å–∏–ª—ã:', ooz, `(+${markups.overhead_own_forces}%)`);

  // 8. –û–§–ó = –û–û–ó * (1 + –ø—Ä–æ—Ü–µ–Ω—Ç)
  const ofz = ooz * (1 + markups.general_costs_without_subcontract / 100);
  console.log('8Ô∏è‚É£ –û–§–ó (–±–µ–∑ —Å—É–±–ø–æ–¥—Ä—è–¥–∞):', ofz, `(+${markups.general_costs_without_subcontract}%)`);

  // 9. –ü—Ä–∏–±—ã–ª—å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å–∏–ª—ã = –û–§–ó * (1 + –ø—Ä–æ—Ü–µ–Ω—Ç)
  const profit = ofz * (1 + markups.profit_own_forces / 100);
  console.log('9Ô∏è‚É£ –ü—Ä–∏–±—ã–ª—å —Å–æ–±—Å—Ç–≤. —Å–∏–ª—ã:', profit, `(+${markups.profit_own_forces}%)`);

  // –ò—Ç–æ–≥–æ–≤–∞—è –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å = –ü—Ä–∏–±—ã–ª—å + –ì–∞—Ä–∞–Ω—Ç–∏–π–Ω—ã–π –ø–µ—Ä–∏–æ–¥
  const totalCommercialCost = profit + warrantyCost;
  
  console.log('‚úÖ –ò–¢–û–ì–û –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å:', totalCommercialCost);
  console.log('üìà –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç —É–≤–µ–ª–∏—á–µ–Ω–∏—è:', (totalCommercialCost / baseCost).toFixed(2));
  
  return totalCommercialCost;
}

/**
 * –†–∞—Å—á–µ—Ç –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–π –Ω–∞—Ü–µ–Ω–∫–∏ –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–∞—Ç–µ—Ä–∏–∞–ª–∞
 * –û—Å–Ω–æ–≤–Ω–æ–π –º–∞—Ç–µ—Ä–∏–∞–ª - —ç—Ç–æ –º–∞—Ç–µ—Ä–∏–∞–ª, —Å–≤—è–∑–∞–Ω–Ω—ã–π —Å —Ä–∞–±–æ—Ç–æ–π —á–µ—Ä–µ–∑ work_material_links
 * 
 * @param baseCost - –ë–∞–∑–æ–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª–∞ (–ú–∞—Ç–µ—Ä–∏–∞–ª—ã –ü–ó = unit_rate * quantity + delivery)
 * @param markups - –ü—Ä–æ—Ü–µ–Ω—Ç—ã –Ω–∞–∫—Ä—É—Ç–æ–∫ –∏–∑ –ë–î
 * @returns –û–±—ä–µ–∫—Ç —Å –±–∞–∑–æ–≤–æ–π —Å—Ç–æ–∏–º–æ—Å—Ç—å—é –º–∞—Ç–µ—Ä–∏–∞–ª–∞ –∏ –Ω–∞—Ü–µ–Ω–∫–æ–π –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ –≤ —Ä–∞–±–æ—Ç—ã
 */
export function calculateMainMaterialCommercialCost(
  baseCost: number,
  markups: TenderMarkupPercentages
): { materialCost: number; workMarkup: number } {
  console.log('üöÄ –†–∞—Å—á–µ—Ç –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –û–°–ù–û–í–ù–û–ì–û –º–∞—Ç–µ—Ä–∏–∞–ª–∞');
  console.log('üìä –ú–∞—Ç–µ—Ä–∏–∞–ª—ã –ü–ó:', baseCost);

  // 1. –ú–∞—Ç–µ—Ä–∏–∞–ª—ã –†–û–°–¢ = –ú–∞—Ç–µ—Ä–∏–∞–ª—ã –ü–ó * (1 + –ø—Ä–æ—Ü–µ–Ω—Ç)
  const materialsGrowth = baseCost * (1 + markups.materials_cost_growth / 100);
  console.log('1Ô∏è‚É£ –ú–∞—Ç–µ—Ä–∏–∞–ª—ã –†–û–°–¢:', materialsGrowth, `(+${markups.materials_cost_growth}%)`);

  // 2. –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω—ã–µ –∑–∞—Ç—Ä–∞—Ç—ã –Ω–∞ –º–∞—Ç–µ—Ä–∏–∞–ª—ã = –ú–∞—Ç–µ—Ä–∏–∞–ª—ã –ü–ó * (1 + –ø—Ä–æ—Ü–µ–Ω—Ç)
  const contingencyMaterials = baseCost * (1 + markups.contingency_costs / 100);
  console.log('2Ô∏è‚É£ –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω—ã–µ –∑–∞—Ç—Ä–∞—Ç—ã –Ω–∞ –º–∞—Ç–µ—Ä–∏–∞–ª—ã:', contingencyMaterials, `(+${markups.contingency_costs}%)`);

  // 3. –û–û–ó –º–∞—Ç = (–ú–∞—Ç–µ—Ä–∏–∞–ª—ã –†–û–°–¢ + –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω—ã–µ - –ú–∞—Ç–µ—Ä–∏–∞–ª—ã –ü–ó) * (1 + –ø—Ä–æ—Ü–µ–Ω—Ç –û–û–ó)
  const oozMat = (materialsGrowth + contingencyMaterials - baseCost) * 
                 (1 + markups.overhead_own_forces / 100);
  console.log('3Ô∏è‚É£ –û–û–ó –º–∞—Ç:', oozMat, `(+${markups.overhead_own_forces}%)`);

  // 4. –û–§–ó –º–∞—Ç = –û–û–ó –º–∞—Ç * (1 + –ø—Ä–æ—Ü–µ–Ω—Ç –û–§–ó)
  const ofzMat = oozMat * (1 + markups.general_costs_without_subcontract / 100);
  console.log('4Ô∏è‚É£ –û–§–ó –º–∞—Ç:', ofzMat, `(+${markups.general_costs_without_subcontract}%)`);

  // 5. –ü—Ä–∏–±—ã–ª—å –º–∞—Ç = –û–§–ó –º–∞—Ç * (1 + –ø—Ä–æ—Ü–µ–Ω—Ç –ü—Ä–∏–±—ã–ª–∏ —Å–æ–±—Å—Ç–≤. —Å–∏–ª)
  const profitMat = ofzMat * (1 + markups.profit_own_forces / 100);
  console.log('5Ô∏è‚É£ –ü—Ä–∏–±—ã–ª—å –º–∞—Ç:', profitMat, `(+${markups.profit_own_forces}%)`);

  // –ò—Ç–æ–≥–æ–≤–∞—è –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å
  const totalCommercialCost = profitMat;
  const totalMarkup = totalCommercialCost - baseCost;

  console.log('‚úÖ –ú–∞—Ç–µ—Ä–∏–∞–ª –æ—Å—Ç–∞–µ—Ç—Å—è (–ú–∞—Ç–µ—Ä–∏–∞–ª—ã –ü–ó):', baseCost);
  console.log('‚úÖ –ù–∞—Ü–µ–Ω–∫–∞ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –≤ —Ä–∞–±–æ—Ç—ã:', totalMarkup);
  console.log('üìà –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç —É–≤–µ–ª–∏—á–µ–Ω–∏—è:', (totalCommercialCost / baseCost).toFixed(2));
  
  // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±—ä–µ–∫—Ç —Å –±–∞–∑–æ–≤–æ–π —Å—Ç–æ–∏–º–æ—Å—Ç—å—é –º–∞—Ç–µ—Ä–∏–∞–ª–∞ –∏ –Ω–∞—Ü–µ–Ω–∫–æ–π –¥–ª—è —Ä–∞–±–æ—Ç
  return {
    materialCost: baseCost,  // –í –º–∞—Ç–µ—Ä–∏–∞–ª–µ –æ—Å—Ç–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –ú–∞—Ç–µ—Ä–∏–∞–ª –ü–ó
    workMarkup: totalMarkup   // –í—Å—è –Ω–∞—Ü–µ–Ω–∫–∞ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –≤ –∫–æ–º–º–µ—Ä—á–µ—Å–∫—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ä–∞–±–æ—Ç
  };
}

/**
 * –†–∞—Å—á–µ—Ç –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–æ–≥–æ –º–∞—Ç–µ—Ä–∏–∞–ª–∞
 * –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–π –º–∞—Ç–µ—Ä–∏–∞–ª - —ç—Ç–æ –º–∞—Ç–µ—Ä–∏–∞–ª –ë–ï–ó —Å–≤—è–∑–∏ —Å —Ä–∞–±–æ—Ç–æ–π
 * 
 * @param baseCost - –ë–∞–∑–æ–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª–∞ (unit_rate * quantity + delivery)
 * @param markups - –ü—Ä–æ—Ü–µ–Ω—Ç—ã –Ω–∞–∫—Ä—É—Ç–æ–∫ –∏–∑ –ë–î
 * @returns –û–±—ä–µ–∫—Ç —Å –Ω—É–ª–µ–≤–æ–π —Å—Ç–æ–∏–º–æ—Å—Ç—å—é –º–∞—Ç–µ—Ä–∏–∞–ª–∞ –∏ –ø–æ–ª–Ω–æ–π –Ω–∞—Ü–µ–Ω–∫–æ–π –¥–ª—è —Ä–∞–±–æ—Ç
 */
export function calculateAuxiliaryMaterialCommercialCost(
  baseCost: number,
  markups: TenderMarkupPercentages
): { materialCost: number; workMarkup: number } {
  console.log('üöÄ –†–∞—Å—á–µ—Ç –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–û–ì–û –º–∞—Ç–µ—Ä–∏–∞–ª–∞');
  console.log('üìä –ë–∞–∑–æ–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å:', baseCost);

  // –î–ª—è –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–æ–≥–æ –º–∞—Ç–µ—Ä–∏–∞–ª–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ –∂–µ —Ñ–æ—Ä–º—É–ª—ã, —á—Ç–æ –∏ –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ
  const result = calculateMainMaterialCommercialCost(baseCost, markups);
  
  // –ù–æ –≤—Å—è —Å—Ç–æ–∏–º–æ—Å—Ç—å (–≤–∫–ª—é—á–∞—è –±–∞–∑–æ–≤—É—é) –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –≤ —Ä–∞–±–æ—Ç—ã
  const totalToWorks = baseCost + result.workMarkup;
  
  console.log('‚úÖ –ú–∞—Ç–µ—Ä–∏–∞–ª –æ—Å—Ç–∞–µ—Ç—Å—è: 0 (–≤—Å–µ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –≤ —Ä–∞–±–æ—Ç—ã)');
  console.log('‚úÖ –ü–µ—Ä–µ—Ö–æ–¥–∏—Ç –≤ —Ä–∞–±–æ—Ç—ã:', totalToWorks);
  
  return {
    materialCost: 0,           // –í –º–∞—Ç–µ—Ä–∏–∞–ª–µ –Ω–µ –æ—Å—Ç–∞–µ—Ç—Å—è –Ω–∏—á–µ–≥–æ
    workMarkup: totalToWorks   // –í—Å—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –≤ —Ä–∞–±–æ—Ç—ã
  };
}

/**
 * –†–∞—Å—á–µ—Ç –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–∞ (–æ–±—â–∞—è —Ñ—É–Ω–∫—Ü–∏—è)
 * 
 * @param baseCost - –ë–∞–∑–æ–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª–∞ (unit_rate * quantity + delivery)
 * @param markups - –ü—Ä–æ—Ü–µ–Ω—Ç—ã –Ω–∞–∫—Ä—É—Ç–æ–∫ –∏–∑ –ë–î
 * @param isLinked - –°–≤—è–∑–∞–Ω –ª–∏ –º–∞—Ç–µ—Ä–∏–∞–ª —Å —Ä–∞–±–æ—Ç–æ–π (true = –æ—Å–Ω–æ–≤–Ω–æ–π, false = –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–π)
 * @returns –ö–æ–º–º–µ—Ä—á–µ—Å–∫–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª–∞
 */
export function calculateMaterialCommercialCost(
  baseCost: number,
  markups: TenderMarkupPercentages,
  isLinked: boolean = false
): number {
  // –î–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—Ä–æ—Å—Ç–æ –±–∞–∑–æ–≤—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å
  // –í –Ω–æ–≤–æ–π –ª–æ–≥–∏–∫–µ –Ω—É–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å calculateMainMaterialCommercialCost –∏–ª–∏ calculateAuxiliaryMaterialCommercialCost
  if (isLinked) {
    const result = calculateMainMaterialCommercialCost(baseCost, markups);
    return result.materialCost; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–æ–ª—å–∫–æ —Ç–æ, —á—Ç–æ –æ—Å—Ç–∞–µ—Ç—Å—è –≤ –º–∞—Ç–µ—Ä–∏–∞–ª–µ
  } else {
    const result = calculateAuxiliaryMaterialCommercialCost(baseCost, markups);
    return result.materialCost; // –î–ª—è –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–æ–≥–æ –≤—Å–µ–≥–¥–∞ 0
  }
}

/**
 * –†–∞—Å—á–µ—Ç –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —Å—É–±–ø–æ–¥—Ä—è–¥–Ω–æ–π —Ä–∞–±–æ—Ç—ã
 * 
 * @param baseCost - –ë–∞–∑–æ–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å —Å—É–±–ø–æ–¥—Ä—è–¥–Ω–æ–π —Ä–∞–±–æ—Ç—ã (–°–£–ë–†–ê–ë –ü–ó)
 * @param markups - –ü—Ä–æ—Ü–µ–Ω—Ç—ã –Ω–∞–∫—Ä—É—Ç–æ–∫ –∏–∑ –ë–î
 * @returns –ö–æ–º–º–µ—Ä—á–µ—Å–∫–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å —Å—É–±–ø–æ–¥—Ä—è–¥–Ω–æ–π —Ä–∞–±–æ—Ç—ã
 */
export function calculateSubcontractWorkCommercialCost(
  baseCost: number,
  markups: TenderMarkupPercentages
): number {
  console.log('üöÄ –†–∞—Å—á–µ—Ç –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —Å—É–±–ø–æ–¥—Ä—è–¥–Ω–æ–π —Ä–∞–±–æ—Ç—ã');
  console.log('üìä –°–£–ë–†–ê–ë –ü–ó (–±–∞–∑–æ–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å):', baseCost);

  // 1. –°—É–±—Ä–∞–± –†–û–°–¢ = –°–£–ë–†–ê–ë –ü–ó * (1 + –ø—Ä–æ—Ü–µ–Ω—Ç –°–£–ë–†–ê–ë –†–û–°–¢)
  const subcontractGrowth = baseCost * (1 + markups.subcontract_works_cost_growth / 100);
  console.log('1Ô∏è‚É£ –°—É–±—Ä–∞–± –†–û–°–¢:', subcontractGrowth, `(+${markups.subcontract_works_cost_growth}%)`);

  // 2. –°—É–±—Ä–∞–± –û–û–ó = –°—É–±—Ä–∞–± –†–û–°–¢ * (1 + –ø—Ä–æ—Ü–µ–Ω—Ç —Å—É–±–ø–æ–¥—Ä—è–¥ –û–û–ó)
  const subcontractOverhead = subcontractGrowth * (1 + markups.overhead_subcontract / 100);
  console.log('2Ô∏è‚É£ –°—É–±—Ä–∞–± –û–û–ó:', subcontractOverhead, `(+${markups.overhead_subcontract}%)`);

  // 3. –°—É–±—Ä–∞–± –ø—Ä–∏–±—ã–ª—å = –°—É–±—Ä–∞–± –û–û–ó * (1 + –ø—Ä–æ—Ü–µ–Ω—Ç –ø—Ä–∏–±—ã–ª—å —Å—É–±–ø–æ–¥—Ä—è–¥–∞)
  const subcontractProfit = subcontractOverhead * (1 + markups.profit_subcontract / 100);
  console.log('3Ô∏è‚É£ –°—É–±—Ä–∞–± –ø—Ä–∏–±—ã–ª—å:', subcontractProfit, `(+${markups.profit_subcontract}%)`);
  
  console.log('‚úÖ –ò—Ç–æ–≥–æ–≤–∞—è –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –°–£–ë–†–ê–ë:', subcontractProfit);
  console.log('üìà –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç —É–≤–µ–ª–∏—á–µ–Ω–∏—è:', (subcontractProfit / baseCost).toFixed(2));
  
  return subcontractProfit;
}

/**
 * –†–∞—Å—á–µ—Ç –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —Å—É–±–ø–æ–¥—Ä—è–¥–Ω–æ–≥–æ –º–∞—Ç–µ—Ä–∏–∞–ª–∞
 * 
 * @param baseCost - –ë–∞–∑–æ–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å —Å—É–±–ø–æ–¥—Ä—è–¥–Ω–æ–≥–æ –º–∞—Ç–µ—Ä–∏–∞–ª–∞ (–°—É–±–º–∞—Ç –ü–ó)
 * @param markups - –ü—Ä–æ—Ü–µ–Ω—Ç—ã –Ω–∞–∫—Ä—É—Ç–æ–∫ –∏–∑ –ë–î
 * @returns –û–±—ä–µ–∫—Ç —Å –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–π —Å—Ç–æ–∏–º–æ—Å—Ç—å—é –º–∞—Ç–µ—Ä–∏–∞–ª–∞ –∏ –Ω–∞—Ü–µ–Ω–∫–æ–π –¥–ª—è —Å—É–±–ø–æ–¥—Ä—è–¥–Ω—ã—Ö —Ä–∞–±–æ—Ç
 */
export function calculateSubcontractMaterialCommercialCost(
  baseCost: number,
  markups: TenderMarkupPercentages
): { materialCost: number; workMarkup: number } {
  console.log('üöÄ –†–∞—Å—á–µ—Ç –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —Å—É–±–ø–æ–¥—Ä—è–¥–Ω–æ–≥–æ –º–∞—Ç–µ—Ä–∏–∞–ª–∞');
  console.log('üìä –°—É–±–º–∞—Ç –ü–ó (–±–∞–∑–æ–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å):', baseCost);

  // –†–∞—Å—á–µ—Ç –ø–æ–ª–Ω–æ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —Å –Ω–∞–∫—Ä—É—Ç–∫–∞–º–∏ (–°—É–±–º–∞—Ç –ø—Ä–∏–±—ã–ª—å)
  const submatProfit = baseCost * (1 + markups.subcontract_materials_cost_growth / 100);
  console.log('üìà –°—É–±–º–∞—Ç –ø—Ä–∏–±—ã–ª—å (—Å –Ω–∞–∫—Ä—É—Ç–∫–æ–π):', submatProfit, 
              `(+${markups.subcontract_materials_cost_growth}%)`);
  
  // –ù–∞—Ü–µ–Ω–∫–∞ = –°—É–±–º–∞—Ç –ø—Ä–∏–±—ã–ª—å - –°—É–±–º–∞—Ç –ü–ó
  const markup = submatProfit - baseCost;
  
  console.log('‚úÖ –°—É–±–º–∞—Ç –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å:', baseCost, '(–æ—Å—Ç–∞–µ—Ç—Å—è –°—É–±–º–∞—Ç –ü–ó)');
  console.log('‚ûï –ù–∞—Ü–µ–Ω–∫–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫ —Å—É–±–ø–æ–¥—Ä—è–¥–Ω—ã–º —Ä–∞–±–æ—Ç–∞–º:', markup);
  
  return {
    materialCost: baseCost,  // –ö–æ–º–º–µ—Ä—á–µ—Å–∫–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å —Å—É–±–º–∞—Ç = –°—É–±–º–∞—Ç –ü–ó
    workMarkup: markup       // –ù–∞—Ü–µ–Ω–∫–∞ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –≤ —Å—É–±–ø–æ–¥—Ä—è–¥–Ω—ã–µ —Ä–∞–±–æ—Ç—ã
  };
}

/**
 * –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∫–æ–º–º–µ—Ä—á–µ—Å–∫—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å BOQ item –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –µ–≥–æ —Ç–∏–ø–∞
 * 
 * @param itemType - –¢–∏–ø —ç–ª–µ–º–µ–Ω—Ç–∞ (work, material, sub_work, sub_material)
 * @param baseCost - –ë–∞–∑–æ–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å —ç–ª–µ–º–µ–Ω—Ç–∞
 * @param markups - –ü—Ä–æ—Ü–µ–Ω—Ç—ã –Ω–∞–∫—Ä—É—Ç–æ–∫ –∏–∑ –ë–î
 * @param isLinked - –î–ª—è –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤: —Å–≤—è–∑–∞–Ω –ª–∏ —Å —Ä–∞–±–æ—Ç–æ–π (true = –æ—Å–Ω–æ–≤–Ω–æ–π, false = –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–π)
 * @returns –ö–æ–º–º–µ—Ä—á–µ—Å–∫–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å —ç–ª–µ–º–µ–Ω—Ç–∞
 */
export function calculateBOQItemCommercialCost(
  itemType: 'work' | 'material' | 'sub_work' | 'sub_material',
  baseCost: number,
  markups: TenderMarkupPercentages,
  isLinked: boolean = false
): number {
  switch (itemType) {
    case 'work':
      return calculateWorkCommercialCost(baseCost, markups);
    case 'material':
      return calculateMaterialCommercialCost(baseCost, markups, isLinked);
    case 'sub_work':
      return calculateSubcontractWorkCommercialCost(baseCost, markups);
    case 'sub_material':
      // –î–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–æ–ª—å–∫–æ —Å—Ç–æ–∏–º–æ—Å—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª–∞
      const result = calculateSubcontractMaterialCommercialCost(baseCost, markups);
      return result.materialCost; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –°—É–±–º–∞—Ç –ü–ó
    default:
      console.warn('‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø —ç–ª–µ–º–µ–Ω—Ç–∞:', itemType);
      return baseCost;
  }
}