import { supabase } from '../client';
import type { 
  TenderMarkupPercentages, 
  CreateTenderMarkupPercentages, 
  UpdateTenderMarkupPercentages,
  DEFAULT_MARKUP_PERCENTAGES 
} from '../types/tender-markup';

/**
 * –ü–æ–ª—É—á–∏—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–µ –ø—Ä–æ—Ü–µ–Ω—Ç—ã –Ω–∞–∫—Ä—É—Ç–æ–∫ –¥–ª—è —Ç–µ–Ω–¥–µ—Ä–∞
 */
export const getActiveTenderMarkup = async (tenderId: string): Promise<TenderMarkupPercentages | null> => {
  console.log('üöÄ [getActiveTenderMarkup] Getting active markup for tender:', tenderId);
  
  const { data, error } = await supabase
    .from('tender_markup_percentages')
    .select('*')
    .eq('tender_id', tenderId)
    .eq('is_active', true)
    .single();

  if (error) {
    if (error.code === 'PGRST116') {
      // –ó–∞–ø–∏—Å—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, —Å–æ–∑–¥–∞–¥–∏–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
      console.log('üìù [getActiveTenderMarkup] No markup found, creating default');
      return await createTenderMarkup({
        tender_id: tenderId,
        ...DEFAULT_MARKUP_PERCENTAGES
      });
    }
    console.error('‚ùå [getActiveTenderMarkup] Error:', error);
    throw error;
  }

  console.log('‚úÖ [getActiveTenderMarkup] Success:', data);
  return data;
};

/**
 * –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –ø—Ä–æ—Ü–µ–Ω—Ç—ã –Ω–∞–∫—Ä—É—Ç–æ–∫ –¥–ª—è —Ç–µ–Ω–¥–µ—Ä–∞ (–≤–∫–ª—é—á–∞—è –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–µ)
 */
export const getAllTenderMarkups = async (tenderId: string): Promise<TenderMarkupPercentages[]> => {
  console.log('üöÄ [getAllTenderMarkups] Getting all markups for tender:', tenderId);
  
  const { data, error } = await supabase
    .from('tender_markup_percentages')
    .select('*')
    .eq('tender_id', tenderId)
    .order('created_at', { ascending: false });

  if (error) {
    console.error('‚ùå [getAllTenderMarkups] Error:', error);
    throw error;
  }

  console.log('‚úÖ [getAllTenderMarkups] Success:', data?.length, 'records');
  return data || [];
};

/**
 * –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–µ –ø—Ä–æ—Ü–µ–Ω—Ç—ã –Ω–∞–∫—Ä—É—Ç–æ–∫
 */
export const createTenderMarkup = async (markup: CreateTenderMarkupPercentages): Promise<TenderMarkupPercentages> => {
  console.log('üöÄ [createTenderMarkup] Creating markup:', markup);
  
  const { data, error } = await supabase
    .from('tender_markup_percentages')
    .insert(markup)
    .select()
    .single();

  if (error) {
    console.error('‚ùå [createTenderMarkup] Error:', error);
    throw error;
  }

  console.log('‚úÖ [createTenderMarkup] Success:', data);
  return data;
};

/**
 * –û–±–Ω–æ–≤–∏—Ç—å –ø—Ä–æ—Ü–µ–Ω—Ç—ã –Ω–∞–∫—Ä—É—Ç–æ–∫
 */
export const updateTenderMarkup = async (
  id: string, 
  updates: UpdateTenderMarkupPercentages
): Promise<TenderMarkupPercentages> => {
  console.log('üöÄ [updateTenderMarkup] Updating markup:', id, updates);
  
  const { data, error } = await supabase
    .from('tender_markup_percentages')
    .update(updates)
    .eq('id', id)
    .select()
    .single();

  if (error) {
    console.error('‚ùå [updateTenderMarkup] Error:', error);
    throw error;
  }

  console.log('‚úÖ [updateTenderMarkup] Success:', data);
  return data;
};

/**
 * –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –Ω–∞–∫—Ä—É—Ç–æ–∫ (–¥–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –¥–ª—è —Ç–µ–Ω–¥–µ—Ä–∞)
 */
export const activateTenderMarkup = async (
  id: string, 
  tenderId: string
): Promise<TenderMarkupPercentages> => {
  console.log('üöÄ [activateTenderMarkup] Activating markup:', id, 'for tender:', tenderId);
  
  // –°–Ω–∞—á–∞–ª–∞ –¥–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –¥–ª—è —ç—Ç–æ–≥–æ —Ç–µ–Ω–¥–µ—Ä–∞
  await supabase
    .from('tender_markup_percentages')
    .update({ is_active: false })
    .eq('tender_id', tenderId)
    .neq('id', id);

  // –ó–∞—Ç–µ–º –∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –Ω—É–∂–Ω—É—é
  const { data, error } = await supabase
    .from('tender_markup_percentages')
    .update({ is_active: true })
    .eq('id', id)
    .select()
    .single();

  if (error) {
    console.error('‚ùå [activateTenderMarkup] Error:', error);
    throw error;
  }

  console.log('‚úÖ [activateTenderMarkup] Success:', data);
  return data;
};

/**
 * –£–¥–∞–ª–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –Ω–∞–∫—Ä—É—Ç–æ–∫
 */
export const deleteTenderMarkup = async (id: string): Promise<void> => {
  console.log('üöÄ [deleteTenderMarkup] Deleting markup:', id);
  
  const { error } = await supabase
    .from('tender_markup_percentages')
    .delete()
    .eq('id', id);

  if (error) {
    console.error('‚ùå [deleteTenderMarkup] Error:', error);
    throw error;
  }

  console.log('‚úÖ [deleteTenderMarkup] Success');
};

/**
 * –†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ —Å —É—á–µ—Ç–æ–º –Ω–æ–≤—ã—Ö –Ω–∞–∫—Ä—É—Ç–æ–∫
 */
export const calculateMarkupFinancials = (
  baseCosts: {
    materials: number;
    works: number;
    submaterials: number;
    subworks: number;
  },
  markup: TenderMarkupPercentages
) => {
  console.log('üöÄ [calculateMarkupFinancials] Calculating with new markup structure:', baseCosts, markup);
  
  // –ë–µ–∑–æ–ø–∞—Å–Ω–æ –∏–∑–≤–ª–µ–∫–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è —Å fallback –Ω–∞ 0
  const safeMarkup = {
    works_16_markup: markup.works_16_markup ?? 160,
    works_cost_growth: markup.works_cost_growth ?? 5,
    materials_cost_growth: markup.materials_cost_growth ?? 3,
    subcontract_works_cost_growth: markup.subcontract_works_cost_growth ?? 7,
    subcontract_materials_cost_growth: markup.subcontract_materials_cost_growth ?? 4,
    contingency_costs: markup.contingency_costs ?? 2,
    overhead_own_forces: markup.overhead_own_forces ?? 8,
    overhead_subcontract: markup.overhead_subcontract ?? 6,
    general_costs_without_subcontract: markup.general_costs_without_subcontract ?? 5,
    profit_own_forces: markup.profit_own_forces ?? 12,
    profit_subcontract: markup.profit_subcontract ?? 8
  };
  
  console.log('üîç [calculateMarkupFinancials] Safe markup values:', safeMarkup);
  
  // –≠–¢–ê–ü 1: –ü—Ä–∏–º–µ–Ω—è–µ–º –ø—Ä–æ—Ü–µ–Ω—Ç "–†–∞–±–æ—Ç—ã 1,6" –∫ –±–∞–∑–æ–≤—ã–º —Ä–∞–±–æ—Ç–∞–º –ü–ó
  const worksAfter16 = baseCosts.works * (safeMarkup.works_16_markup / 100);
  console.log('üíº [–≠—Ç–∞–ø 1] –†–∞–±–æ—Ç—ã –ü–ó * –†–∞–±–æ—Ç—ã 1,6%:', baseCosts.works, '*', safeMarkup.works_16_markup + '%', '=', worksAfter16);
  
  // –≠–¢–ê–ü 2: –ü—Ä–∏–º–µ–Ω—è–µ–º "–†–∞–±–æ—Ç—ã –†–û–°–¢" –∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É –≠—Ç–∞–ø–∞ 1 
  const worksWithGrowth = worksAfter16 * (1 + safeMarkup.works_cost_growth / 100);
  console.log('üìà [–≠—Ç–∞–ø 2] –†–µ–∑—É–ª—å—Ç–∞—Ç –≠—Ç–∞–ø–∞ 1 * –†–∞–±–æ—Ç—ã –†–û–°–¢%:', worksAfter16, '* (1 +', safeMarkup.works_cost_growth + '%)', '=', worksWithGrowth);
  
  // –≠–¢–ê–ü –¥–ª—è –ú–ê–¢–ï–†–ò–ê–õ–û–í: –ü—Ä–∏–º–µ–Ω—è–µ–º "–†–æ—Å—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤" –∫ –ú–∞—Ç–µ—Ä–∏–∞–ª–∞–º –ü–ó
  const materialsGrowthAmount = baseCosts.materials * (safeMarkup.materials_cost_growth / 100);
  const materialsWithGrowth = baseCosts.materials + materialsGrowthAmount;
  console.log('üì¶ [–ú–∞—Ç–µ—Ä–∏–∞–ª—ã] –ú–∞—Ç–µ—Ä–∏–∞–ª—ã –ü–ó * –†–æ—Å—Ç –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤%:', baseCosts.materials, '*', safeMarkup.materials_cost_growth + '%', '=', materialsGrowthAmount, '‚Üí –ò—Ç–æ–≥–æ:', materialsWithGrowth);
  
  // –≠–¢–ê–ü –¥–ª—è –°–£–ë–ü–û–î–†–Ø–î–ù–´–• –ú–ê–¢–ï–†–ò–ê–õ–û–í: –ü—Ä–∏–º–µ–Ω—è–µ–º "–†–æ—Å—Ç –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ —Å—É–±–ø–æ–¥—Ä—è–¥–∞" –∫ –°—É–±–º–∞—Ç–µ—Ä–∏–∞–ª–∞–º –ü–ó
  const submaterialsGrowthAmount = baseCosts.submaterials * (safeMarkup.subcontract_materials_cost_growth / 100);
  const submaterialsWithGrowth = baseCosts.submaterials + submaterialsGrowthAmount;
  console.log('üèóÔ∏è [–°—É–±–º–∞—Ç–µ—Ä–∏–∞–ª—ã] –°—É–±–º–∞—Ç–µ—Ä–∏–∞–ª—ã –ü–ó * –†–æ—Å—Ç —Å—É–±–º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤%:', baseCosts.submaterials, '*', safeMarkup.subcontract_materials_cost_growth + '%', '=', submaterialsGrowthAmount, '‚Üí –ò—Ç–æ–≥–æ:', submaterialsWithGrowth);
  
  // –≠–¢–ê–ü –¥–ª—è –°–£–ë–ü–û–î–†–Ø–î–ù–´–• –†–ê–ë–û–¢: –ü—Ä–∏–º–µ–Ω—è–µ–º "–†–æ—Å—Ç —Ä–∞–±–æ—Ç —Å—É–±–ø–æ–¥—Ä—è–¥–∞" –∫ –°—É–±—Ä–∞–±–æ—Ç–∞–º –ü–ó
  const subworksGrowthAmount = baseCosts.subworks * (safeMarkup.subcontract_works_cost_growth / 100);
  const subworksWithGrowth = baseCosts.subworks + subworksGrowthAmount;
  console.log('üë∑ [–°—É–±—Ä–∞–±–æ—Ç—ã] –°—É–±—Ä–∞–±–æ—Ç—ã –ü–ó * –†–æ—Å—Ç —Å—É–±—Ä–∞–±–æ—Ç%:', baseCosts.subworks, '*', safeMarkup.subcontract_works_cost_growth + '%', '=', subworksGrowthAmount, '‚Üí –ò—Ç–æ–≥–æ:', subworksWithGrowth);
  
  const subtotalAfterGrowth = materialsWithGrowth + worksWithGrowth + submaterialsWithGrowth + subworksWithGrowth;
  
  // –ù–ï–ü–†–ï–î–í–ò–î–ï–ù–ù–´–ï –ó–ê–¢–†–ê–¢–´: –ü—Ä–∏–º–µ–Ω—è–µ–º % —Ç–æ–ª—å–∫–æ –∫ –†–∞–±–æ—Ç–∞–º –†–û–°–¢ + –ú–∞—Ç–µ—Ä–∏–∞–ª–∞–º –†–û–°–¢ (–±–µ–∑ —Å—É–±–ø–æ–¥—Ä—è–¥–∞)
  const contingencyBase = worksWithGrowth + materialsWithGrowth;
  const contingencyCost = contingencyBase * (safeMarkup.contingency_costs / 100);
  console.log('‚ö†Ô∏è [–ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω—ã–µ] (–†–∞–±–æ—Ç—ã –†–û–°–¢ + –ú–∞—Ç–µ—Ä–∏–∞–ª—ã –†–û–°–¢) * –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω—ã–µ%:', '(' + worksWithGrowth.toFixed(2), '+', materialsWithGrowth.toFixed(2) + ')', '*', safeMarkup.contingency_costs + '%', '=', contingencyCost.toFixed(2));
  
  const subtotalWithContingency = subtotalAfterGrowth + contingencyCost;
  
  // –†–∞–∑–¥–µ–ª—è–µ–º –Ω–∞ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å–∏–ª—ã –∏ —Å—É–±–ø–æ–¥—Ä—è–¥ –¥–ª—è –û–û–ó
  const ownForcesBase = materialsWithGrowth + worksWithGrowth;
  const subcontractBase = submaterialsWithGrowth + subworksWithGrowth;
  
  // –û–û–ó –°–£–ë–ü–û–î–†–Ø–î: –ü—Ä–∏–º–µ–Ω—è–µ–º % –∫ —Å—É–º–º–µ –°—É–±–º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –ü–ó –∏ –°—É–±—Ä–∞–±–æ—Ç –ü–ó (–±–∞–∑–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è, –Ω–µ —Å —Ä–æ—Å—Ç–æ–º!)
  const overheadSubcontractBase = baseCosts.submaterials + baseCosts.subworks;
  const overheadSubcontract = overheadSubcontractBase * (safeMarkup.overhead_subcontract / 100);
  console.log('üèóÔ∏è [–û–û–ó –°—É–±–ø–æ–¥—Ä—è–¥] (–°—É–±–º–∞—Ç –ü–ó + –°—É–±—Ä–∞–± –ü–ó) * –û–û–ó —Å—É–±–ø–æ–¥—Ä—è–¥%:', '(' + baseCosts.submaterials.toFixed(2), '+', baseCosts.subworks.toFixed(2) + ')', '*', safeMarkup.overhead_subcontract + '%', '=', overheadSubcontract.toFixed(2));
  
  // –î–æ–±–∞–≤–ª—è–µ–º –û–û–ó —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å–∏–ª—ã (–ø–æ–∫–∞ –æ—Å—Ç–∞–≤–ª—è–µ–º —Å—Ç–∞—Ä—É—é –ª–æ–≥–∏–∫—É, –ø–æ—Ç–æ–º —É—Ç–æ—á–Ω–∏–º)
  const overheadOwnForces = ownForcesBase * (safeMarkup.overhead_own_forces / 100);
  
  const subtotalWithOverhead = subtotalWithContingency + overheadOwnForces + overheadSubcontract;
  
  // –î–æ–±–∞–≤–ª—è–µ–º –û–§–ó (–æ–±—â–∏–µ —Ñ–∏—Ä–º–µ–Ω–Ω—ã–µ –∑–∞—Ç—Ä–∞—Ç—ã) - —Ç–æ–ª—å–∫–æ –¥–ª—è —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Å–∏–ª
  const generalCosts = ownForcesBase * (safeMarkup.general_costs_without_subcontract / 100);
  
  const subtotalWithGeneralCosts = subtotalWithOverhead + generalCosts;
  
  // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–∏–±—ã–ª—å —Ä–∞–∑–¥–µ–ª—å–Ω–æ –¥–ª—è —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Å–∏–ª –∏ —Å—É–±–ø–æ–¥—Ä—è–¥–∞
  const profitOwnForces = ownForcesBase * (safeMarkup.profit_own_forces / 100);
  const profitSubcontract = subcontractBase * (safeMarkup.profit_subcontract / 100);
  
  const totalProfit = profitOwnForces + profitSubcontract;
  const totalCostWithProfit = subtotalWithGeneralCosts + totalProfit;
  
  const result = {
    // –ë–∞–∑–æ–≤—ã–µ –∑–∞—Ç—Ä–∞—Ç—ã —Å –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–∞–º–∏ –∏ —Ä–æ—Å—Ç–æ–º
    materialsWithGrowth,
    worksWithGrowth: worksWithGrowth,
    worksAfter16,
    submaterialsWithGrowth,
    subworksWithGrowth,
    subtotalAfterGrowth,
    
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥—ã
    contingencyCost,
    overheadOwnForces,
    overheadSubcontract,
    generalCosts,
    
    // –ü—Ä–∏–±—ã–ª—å
    profitOwnForces,
    profitSubcontract,
    totalProfit,
    
    // –ò—Ç–æ–≥–∏
    totalCostWithProfit,
    
    // –î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
    breakdown: {
      baseCosts,
      markupPercentages: safeMarkup,
      calculatedCosts: {
        ownForcesBase,
        subcontractBase,
        contingency: contingencyCost,
        overheadOwn: overheadOwnForces,
        overheadSub: overheadSubcontract,
        generalCosts: generalCosts,
        profitOwn: profitOwnForces,
        profitSub: profitSubcontract
      }
    }
  };
  
  console.log('‚úÖ [calculateMarkupFinancials] New structure result:', result);
  return result;
};