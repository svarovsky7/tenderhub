import React, { useState } from 'react';
import { Card, Typography, Space, Button, Row, Col, Divider } from 'antd';
import { 
  EyeOutlined, 
  CodeOutlined, 
  ToolOutlined,
  BuildOutlined,
  RocketOutlined
} from '@ant-design/icons';
import EnhancedQuickAddCard from '../tender/EnhancedQuickAddCard';
import SuccessNotification from './SuccessNotification';

const { Title, Text, Paragraph } = Typography;

const QuickAddDemo: React.FC = () => {
  const [showSuccess, setShowSuccess] = useState(false);
  const [lastAddedItem, setLastAddedItem] = useState<{type: string, name: string} | null>(null);

  const handleMockAdd = async (data: any) => {
    console.log('üéØ Demo: Adding item', data);
    
    // Simulate API call delay
    await new Promise(resolve => setTimeout(resolve, 2000));
    
    setLastAddedItem({
      type: data.type === 'work' ? '—Ä–∞–±–æ—Ç–∞' : '–º–∞—Ç–µ—Ä–∏–∞–ª',
      name: data.description
    });
    setShowSuccess(true);
    
    // Mock success
    return Promise.resolve();
  };

  const features = [
    {
      icon: <RocketOutlined className="text-blue-500" />,
      title: '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –¥–∏–∑–∞–π–Ω',
      description: 'Glass morphism —ç—Ñ—Ñ–µ–∫—Ç—ã, –≥—Ä–∞–¥–∏–µ–Ω—Ç—ã –∏ –ø–ª–∞–≤–Ω—ã–µ –∞–Ω–∏–º–∞—Ü–∏–∏'
    },
    {
      icon: <EyeOutlined className="text-purple-500" />,
      title: '–£–º–Ω–æ–µ –∞–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ',
      description: '–ü–æ–∏—Å–∫ —Å –ø—Ä–µ–≤—å—é, –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç—å –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü–∏—è'
    },
    {
      icon: <CodeOutlined className="text-green-500" />,
      title: '–í–∏–∑—É–∞–ª—å–Ω–∞—è –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å',
      description: '–ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä—ã, –∞–Ω–∏–º–∞—Ü–∏–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–π –∏ –º–∏–∫—Ä–æ–∏–Ω—Ç–µ—Ä–∞–∫—Ü–∏–∏'
    }
  ];

  return (
    <div className="w-full min-h-screen bg-gradient-to-br from-slate-50 via-blue-50 to-indigo-100 p-6">
      <div className="max-w-7xl mx-auto">
        {/* Header */}
        <div className="text-center mb-12">
          <Title level={1} className="text-4xl font-bold bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent">
            –£–ª—É—á—à–µ–Ω–Ω—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏ QuickAdd
          </Title>
          <Paragraph className="text-lg text-gray-600 mt-4">
            –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ä–∞–±–æ—Ç –∏ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º UX
          </Paragraph>
        </div>

        {/* Features */}
        <Row gutter={[24, 24]} className="mb-12">
          {features.map((feature, index) => (
            <Col xs={24} md={8} key={index}>
              <Card 
                className="h-full border-0 shadow-lg hover:shadow-xl transition-all duration-300 hover:-translate-y-1"
                bodyStyle={{ padding: '32px' }}
              >
                <div className="text-center">
                  <div className="text-4xl mb-4">{feature.icon}</div>
                  <Title level={4}>{feature.title}</Title>
                  <Text className="text-gray-600">{feature.description}</Text>
                </div>
              </Card>
            </Col>
          ))}
        </Row>

        <Divider>
          <span className="text-gray-600 font-semibold text-lg">
            –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
          </span>
        </Divider>

        {/* Demo Cards */}
        <Row gutter={[32, 32]} className="mb-12">
          <Col xs={24} xl={12}>
            <div className="space-y-4">
              <div className="flex items-center gap-3 mb-6">
                <BuildOutlined className="text-2xl text-blue-600" />
                <Title level={3} className="!mb-0">–ö–∞—Ä—Ç–æ—á–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ä–∞–±–æ—Ç</Title>
              </div>
              <EnhancedQuickAddCard 
                type="work"
                onAdd={handleMockAdd}
              />
            </div>
          </Col>
          
          <Col xs={24} xl={12}>
            <div className="space-y-4">
              <div className="flex items-center gap-3 mb-6">
                <ToolOutlined className="text-2xl text-green-600" />
                <Title level={3} className="!mb-0">–ö–∞—Ä—Ç–æ—á–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤</Title>
              </div>
              <EnhancedQuickAddCard 
                type="material"
                onAdd={handleMockAdd}
              />
            </div>
          </Col>
        </Row>

        {/* Key Improvements */}
        <Card className="border-0 shadow-xl bg-gradient-to-r from-blue-50 to-purple-50">
          <Title level={2} className="text-center mb-8">–ö–ª—é—á–µ–≤—ã–µ —É–ª—É—á—à–µ–Ω–∏—è</Title>
          
          <Row gutter={[24, 24]}>
            <Col xs={24} md={12}>
              <div className="space-y-4">
                <Title level={4} className="text-blue-600">üé® –î–∏–∑–∞–π–Ω</Title>
                <ul className="space-y-2">
                  <li>‚Ä¢ Glass morphism —ç—Ñ—Ñ–µ–∫—Ç—ã —Å backdrop-filter</li>
                  <li>‚Ä¢ –ü–ª–∞–≤–Ω—ã–µ –ø–µ—Ä–µ—Ö–æ–¥—ã –∏ –º–∏–∫—Ä–æ–∞–Ω–∏–º–∞—Ü–∏–∏</li>
                  <li>‚Ä¢ –ê–¥–∞–ø—Ç–∏–≤–Ω—ã–π –¥–∏–∑–∞–π–Ω –¥–ª—è –≤—Å–µ—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤</li>
                  <li>‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ accessibility –∏ reduced motion</li>
                </ul>
                
                <Title level={4} className="text-purple-600">üöÄ –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å</Title>
                <ul className="space-y-2">
                  <li>‚Ä¢ React.memo –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –ª–∏—à–Ω–∏—Ö —Ä–µ–Ω–¥–µ—Ä–æ–≤</li>
                  <li>‚Ä¢ useCallback –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤</li>
                  <li>‚Ä¢ Debounced –ø–æ–∏—Å–∫ (300ms)</li>
                  <li>‚Ä¢ Lazy loading –¥–ª—è –∞–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏—è</li>
                </ul>
              </div>
            </Col>
            
            <Col xs={24} md={12}>
              <div className="space-y-4">
                <Title level={4} className="text-green-600">‚ö° UX</Title>
                <ul className="space-y-2">
                  <li>‚Ä¢ –£–º–Ω–æ–µ –∞–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ —Å –ø—Ä–µ–≤—å—é</li>
                  <li>‚Ä¢ –†–µ–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –ø–æ–¥—Å—á–µ—Ç–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏</li>
                  <li>‚Ä¢ –ü—Ä–æ–≥—Ä–µ—Å—Å-–∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ</li>
                  <li>‚Ä¢ –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è —É—Å–ø–µ—Ö–∞/–æ—à–∏–±–∫–∏</li>
                </ul>
                
                <Title level={4} className="text-orange-600">üõ† –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å</Title>
                <ul className="space-y-2">
                  <li>‚Ä¢ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º–∏ API</li>
                  <li>‚Ä¢ –í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–æ—Ä–º —Å –∫—Ä–∞—Å–∏–≤—ã–º–∏ –æ—à–∏–±–∫–∞–º–∏</li>
                  <li>‚Ä¢ Tooltips —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π</li>
                  <li>‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤ –¥–ª—è –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤</li>
                </ul>
              </div>
            </Col>
          </Row>
        </Card>

        {/* Demo Controls */}
        <div className="text-center mt-12">
          <Space size="large">
            <Button 
              type="primary" 
              size="large"
              onClick={() => {
                setLastAddedItem({ type: '—Ç–µ—Å—Ç', name: '–î–µ–º–æ —ç–ª–µ–º–µ–Ω—Ç' });
                setShowSuccess(true);
              }}
              className="bg-gradient-to-r from-blue-600 to-purple-600 border-0"
            >
              –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
            </Button>
            <Button 
              size="large"
              onClick={() => window.scrollTo({ top: 0, behavior: 'smooth' })}
            >
              –ù–∞–≤–µ—Ä—Ö
            </Button>
          </Space>
        </div>
      </div>

      {/* Success Notification */}
      <SuccessNotification
        visible={showSuccess}
        title={lastAddedItem ? `${lastAddedItem.type} –¥–æ–±–∞–≤–ª–µ–Ω${lastAddedItem.type === '—Ä–∞–±–æ—Ç–∞' ? '–∞' : ''}!` : '–£—Å–ø–µ—à–Ω–æ!'}
        description={lastAddedItem ? `"${lastAddedItem.name}" –±—ã–ª${lastAddedItem.type === '—Ä–∞–±–æ—Ç–∞' ? '–∞' : ''} —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω${lastAddedItem.type === '—Ä–∞–±–æ—Ç–∞' ? '–∞' : ''} –≤ BOQ` : undefined}
        onClose={() => setShowSuccess(false)}
      />
    </div>
  );
};

export default QuickAddDemo;