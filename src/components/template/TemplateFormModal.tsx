import React, { useState, useEffect } from 'react';
import { Modal, Form, Input, Select, InputNumber, Switch, message } from 'antd';
import { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';
import { materialsApi } from '../../lib/supabase/api/materials';
import { worksApi } from '../../lib/supabase/api/works';
import { workMaterialTemplatesApi, type WorkMaterialTemplate } from '../../lib/supabase/api/work-material-templates';

interface TemplateFormModalProps {
  open: boolean;
  onClose: () => void;
  editingTemplate?: WorkMaterialTemplate | null;
}

const TemplateFormModal: React.FC<TemplateFormModalProps> = ({
  open,
  onClose,
  editingTemplate
}) => {
  console.log('üöÄ TemplateFormModal render:', { open, editingTemplate });

  const [form] = Form.useForm();
  const queryClient = useQueryClient();
  const [selectedWorkType, setSelectedWorkType] = useState<'work' | 'sub_work'>('work');
  const [selectedMaterialType, setSelectedMaterialType] = useState<'material' | 'sub_material'>('material');

  // –ó–∞–≥—Ä—É–∑–∫–∞ —Ä–∞–±–æ—Ç
  const { data: works = [] } = useQuery({
    queryKey: ['works-library'],
    queryFn: async () => {
      const response = await worksApi.getAll();
      if (response.error) throw new Error(response.error);
      return response.data || [];
    }
  });

  // –ó–∞–≥—Ä—É–∑–∫–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤
  const { data: materials = [] } = useQuery({
    queryKey: ['materials-library'],
    queryFn: async () => {
      const response = await materialsApi.getAll();
      if (response.error) throw new Error(response.error);
      return response.data || [];
    }
  });

  // –°–æ–∑–¥–∞–Ω–∏–µ/–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞
  const createMutation = useMutation({
    mutationFn: async (values: WorkMaterialTemplate) => {
      if (editingTemplate?.id) {
        return await workMaterialTemplatesApi.updateTemplateItem(editingTemplate.id, values);
      } else {
        return await workMaterialTemplatesApi.createTemplateItem(values);
      }
    },
    onSuccess: () => {
      message.success(editingTemplate ? '–≠–ª–µ–º–µ–Ω—Ç —à–∞–±–ª–æ–Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω' : '–≠–ª–µ–º–µ–Ω—Ç —à–∞–±–ª–æ–Ω–∞ —Å–æ–∑–¥–∞–Ω');
      queryClient.invalidateQueries({ queryKey: ['work-material-templates'] });
      onClose();
      form.resetFields();
    },
    onError: (error: any) => {
      message.error(`–û—à–∏–±–∫–∞: ${error.message || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`);
    }
  });

  // –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ–æ—Ä–º—ã –ø—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
  useEffect(() => {
    if (editingTemplate && open) {
      console.log('üîÑ Filling form with template data:', editingTemplate);

      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø—ã —ç–ª–µ–º–µ–Ω—Ç–æ–≤
      const workType = editingTemplate.work_library_id ? 'work' : 'sub_work';
      const materialType = editingTemplate.material_library_id ? 'material' : 'sub_material';

      setSelectedWorkType(workType);
      setSelectedMaterialType(materialType);

      form.setFieldsValue({
        template_name: editingTemplate.template_name,
        template_description: editingTemplate.template_description,
        work_type: workType,
        work_id: editingTemplate.work_library_id || editingTemplate.sub_work_library_id,
        material_type: materialType,
        material_id: editingTemplate.material_library_id || editingTemplate.sub_material_library_id,
        conversion_coefficient: editingTemplate.conversion_coefficient,
        is_linked_to_work: editingTemplate.is_linked_to_work,
        notes: editingTemplate.notes
      });
    } else if (open) {
      // –°–±—Ä–æ—Å —Ñ–æ—Ä–º—ã –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
      form.resetFields();
      setSelectedWorkType('work');
      setSelectedMaterialType('material');
    }
  }, [editingTemplate, open, form]);

  const handleSubmit = (values: any) => {
    console.log('üöÄ Form submitted:', values);

    const templateData: WorkMaterialTemplate = {
      template_name: values.template_name,
      template_description: values.template_description,
      work_library_id: values.work_type === 'work' ? values.work_id : undefined,
      sub_work_library_id: values.work_type === 'sub_work' ? values.work_id : undefined,
      material_library_id: values.material_type === 'material' ? values.material_id : undefined,
      sub_material_library_id: values.material_type === 'sub_material' ? values.material_id : undefined,
      conversion_coefficient: values.conversion_coefficient || 1.0,
      is_linked_to_work: values.is_linked_to_work !== false,
      notes: values.notes
    };

    createMutation.mutate(templateData);
  };

  const handleCancel = () => {
    form.resetFields();
    onClose();
  };

  // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –ø–æ —Ç–∏–ø—É
  const getWorkOptions = () => {
    return works
      .filter(work => work.item_type === selectedWorkType)
      .map(work => ({
        value: work.id,
        label: work.name
      }));
  };

  const getMaterialOptions = () => {
    return materials
      .filter(material => material.item_type === selectedMaterialType)
      .map(material => ({
        value: material.id,
        label: material.name
      }));
  };

  return (
    <Modal
      title={editingTemplate ? '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —ç–ª–µ–º–µ–Ω—Ç —à–∞–±–ª–æ–Ω–∞' : '–°–æ–∑–¥–∞—Ç—å —ç–ª–µ–º–µ–Ω—Ç —à–∞–±–ª–æ–Ω–∞'}
      open={open}
      onOk={form.submit}
      onCancel={handleCancel}
      confirmLoading={createMutation.isPending}
      width={800}
      destroyOnClose
      styles={{
        body: { padding: '24px' },
        header: { padding: '16px 24px', borderBottom: '1px solid #f0f0f0' }
      }}
    >
      <Form
        form={form}
        layout="vertical"
        onFinish={handleSubmit}
        preserve={false}
      >
        {/* –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —à–∞–±–ª–æ–Ω–µ */}
        <div className="bg-gradient-to-r from-blue-50 to-indigo-50 rounded-lg border border-blue-100 mb-6">
          <div className="bg-blue-600 text-white px-4 py-2 rounded-t-lg">
            <h3 className="text-sm font-medium mb-0">–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h3>
          </div>
          <div className="p-4 space-y-4">
            <div className="grid grid-cols-1 gap-4">
              <Form.Item
                name="template_name"
                label={<span className="font-medium text-gray-700">–ù–∞–∑–≤–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞</span>}
                rules={[{ required: true, message: '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞' }]}
                className="mb-3"
              >
                <Input
                  placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –°—Ç—è–∂–∫–∞ –ø–æ–ª–∞ —Å –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º–∏"
                  className="border-blue-200 focus:border-blue-400 hover:border-blue-300"
                  size="large"
                />
              </Form.Item>

              <Form.Item
                name="template_description"
                label={<span className="font-medium text-gray-700">–û–ø–∏—Å–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞</span>}
                className="mb-0"
              >
                <Input.TextArea
                  rows={3}
                  placeholder="–û–ø–∏—Å–∞–Ω–∏–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è —à–∞–±–ª–æ–Ω–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)"
                  className="border-blue-200 focus:border-blue-400 hover:border-blue-300"
                />
              </Form.Item>
            </div>
          </div>
        </div>

        {/* –í—ã–±–æ—Ä —Ä–∞–±–æ—Ç –∏ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ */}
        <div className="bg-gradient-to-r from-green-50 to-emerald-50 rounded-lg border border-green-100 mb-6">
          <div className="bg-green-600 text-white px-4 py-2 rounded-t-lg">
            <h3 className="text-sm font-medium mb-0">–°–≤—è–∑–∞–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã</h3>
          </div>
          <div className="p-4">
            <div className="grid grid-cols-2 gap-6">
              {/* –°–µ–∫—Ü–∏—è —Ä–∞–±–æ—Ç */}
              <div className="bg-white rounded-lg border border-green-200 p-4">
                <div className="flex items-center mb-3">
                  <div className="w-3 h-3 bg-green-500 rounded-full mr-2"></div>
                  <span className="font-medium text-gray-800">–†–∞–±–æ—Ç—ã</span>
                </div>
                <div className="space-y-3">
                  <Form.Item
                    name="work_type"
                    label={<span className="text-sm font-medium text-gray-600">–¢–∏–ø —Ä–∞–±–æ—Ç—ã</span>}
                    rules={[{ required: true, message: '–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —Ä–∞–±–æ—Ç—ã' }]}
                    className="mb-2"
                  >
                    <Select
                      value={selectedWorkType}
                      onChange={setSelectedWorkType}
                      options={[
                        { value: 'work', label: '–†–∞–±–æ—Ç–∞' },
                        { value: 'sub_work', label: '–°—É–±-—Ä–∞–±–æ—Ç–∞' }
                      ]}
                      className="[&_.ant-select-selector]:border-green-200 [&_.ant-select-selector]:hover:border-green-300"
                      size="large"
                    />
                  </Form.Item>

                  <Form.Item
                    name="work_id"
                    label={<span className="text-sm font-medium text-gray-600">–í—ã–±–æ—Ä —Ä–∞–±–æ—Ç—ã</span>}
                    rules={[{ required: true, message: '–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–±–æ—Ç—É' }]}
                    className="mb-0"
                  >
                    <Select
                      showSearch
                      placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–±–æ—Ç—É"
                      options={getWorkOptions()}
                      filterOption={(input, option) =>
                        (option?.label ?? '').toLowerCase().includes(input.toLowerCase())
                      }
                      className="[&_.ant-select-selector]:border-green-200 [&_.ant-select-selector]:hover:border-green-300"
                      size="large"
                    />
                  </Form.Item>
                </div>
              </div>

              {/* –°–µ–∫—Ü–∏—è –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ */}
              <div className="bg-white rounded-lg border border-green-200 p-4">
                <div className="flex items-center mb-3">
                  <div className="w-3 h-3 bg-orange-500 rounded-full mr-2"></div>
                  <span className="font-medium text-gray-800">–ú–∞—Ç–µ—Ä–∏–∞–ª—ã</span>
                </div>
                <div className="space-y-3">
                  <Form.Item
                    name="material_type"
                    label={<span className="text-sm font-medium text-gray-600">–¢–∏–ø –º–∞—Ç–µ—Ä–∏–∞–ª–∞</span>}
                    rules={[{ required: true, message: '–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –º–∞—Ç–µ—Ä–∏–∞–ª–∞' }]}
                    className="mb-2"
                  >
                    <Select
                      value={selectedMaterialType}
                      onChange={setSelectedMaterialType}
                      options={[
                        { value: 'material', label: '–ú–∞—Ç–µ—Ä–∏–∞–ª' },
                        { value: 'sub_material', label: '–°—É–±-–º–∞—Ç–µ—Ä–∏–∞–ª' }
                      ]}
                      className="[&_.ant-select-selector]:border-orange-200 [&_.ant-select-selector]:hover:border-orange-300"
                      size="large"
                    />
                  </Form.Item>

                  <Form.Item
                    name="material_id"
                    label={<span className="text-sm font-medium text-gray-600">–í—ã–±–æ—Ä –º–∞—Ç–µ—Ä–∏–∞–ª–∞</span>}
                    rules={[{ required: true, message: '–í—ã–±–µ—Ä–∏—Ç–µ –º–∞—Ç–µ—Ä–∏–∞–ª' }]}
                    className="mb-0"
                  >
                    <Select
                      showSearch
                      placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –º–∞—Ç–µ—Ä–∏–∞–ª"
                      options={getMaterialOptions()}
                      filterOption={(input, option) =>
                        (option?.label ?? '').toLowerCase().includes(input.toLowerCase())
                      }
                      className="[&_.ant-select-selector]:border-orange-200 [&_.ant-select-selector]:hover:border-orange-300"
                      size="large"
                    />
                  </Form.Item>
                </div>
              </div>
            </div>
          </div>
        </div>

        {/* –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ */}
        <div className="bg-gradient-to-r from-purple-50 to-violet-50 rounded-lg border border-purple-100 mb-6">
          <div className="bg-purple-600 text-white px-4 py-2 rounded-t-lg">
            <h3 className="text-sm font-medium mb-0">–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏</h3>
          </div>
          <div className="p-4">
            <div className="grid grid-cols-2 gap-6">
              <div className="space-y-4">
                <Form.Item
                  name="conversion_coefficient"
                  label={<span className="font-medium text-gray-700">–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –ø–µ—Ä–µ–≤–æ–¥–∞</span>}
                  rules={[
                    { required: true, message: '–í–≤–µ–¥–∏—Ç–µ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –ø–µ—Ä–µ–≤–æ–¥–∞' },
                    { type: 'number', min: 0.0001, message: '–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –±–æ–ª—å—à–µ 0' }
                  ]}
                  initialValue={1.0}
                  className="mb-0"
                >
                  <InputNumber
                    min={0.0001}
                    max={99999}
                    step={0.1}
                    precision={4}
                    style={{ width: '100%' }}
                    placeholder="1.0"
                    className="border-purple-200 hover:border-purple-300"
                    size="large"
                  />
                </Form.Item>
              </div>

              <div className="flex items-center space-y-4">
                <Form.Item
                  name="is_linked_to_work"
                  label={<span className="font-medium text-gray-700">–ü—Ä–∏–≤—è–∑–∞–Ω –∫ —Ä–∞–±–æ—Ç–µ</span>}
                  valuePropName="checked"
                  initialValue={true}
                  className="mb-0"
                >
                  <div className="flex items-center space-x-3">
                    <Switch
                      size="default"
                      className="[&_.ant-switch-checked]:bg-purple-500"
                    />
                    <span className="text-sm text-gray-600">–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–∏–≤—è–∑–∫–∞</span>
                  </div>
                </Form.Item>
              </div>
            </div>
          </div>
        </div>

        {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
        <div className="bg-gradient-to-r from-gray-50 to-slate-50 rounded-lg border border-gray-200">
          <div className="bg-gray-600 text-white px-4 py-2 rounded-t-lg">
            <h3 className="text-sm font-medium mb-0">–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h3>
          </div>
          <div className="p-4">
            <Form.Item
              name="notes"
              label={<span className="font-medium text-gray-700">–ü—Ä–∏–º–µ—á–∞–Ω–∏—è</span>}
              className="mb-0"
            >
              <Input.TextArea
                rows={3}
                placeholder="–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–∏–º–µ—á–∞–Ω–∏—è –∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é —à–∞–±–ª–æ–Ω–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)"
                className="border-gray-200 focus:border-gray-400 hover:border-gray-300"
              />
            </Form.Item>
          </div>
        </div>
      </Form>
    </Modal>
  );
};

export default TemplateFormModal;