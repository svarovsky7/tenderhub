/**
 * Script to investigate markup issue with –ñ–ö –ê–¥–º–∏—Ä–∞–ª tender position 117 (–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –≥—Ä—É–Ω—Ç–∞)
 */
import { createClient } from '@supabase/supabase-js';
import * as dotenv from 'dotenv';
import * as path from 'path';

// Load environment variables
dotenv.config({ path: path.resolve(process.cwd(), '.env.local') });

const supabaseUrl = process.env.VITE_SUPABASE_URL;
const supabaseAnonKey = process.env.VITE_SUPABASE_ANON_KEY;

if (!supabaseUrl || !supabaseAnonKey) {
  console.error('‚ùå Missing required environment variables');
  process.exit(1);
}

const supabase = createClient(supabaseUrl, supabaseAnonKey);

async function investigateAdmiralTender() {
  console.log('\nüîç –ò–°–°–õ–ï–î–û–í–ê–ù–ò–ï –¢–ï–ù–î–ï–†–ê –ñ–ö –ê–î–ú–ò–†–ê–õ - –ü–û–ó–ò–¶–ò–Ø 117 (–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –≥—Ä—É–Ω—Ç–∞)');
  console.log('‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n');

  // 1. –ü–æ–∏—Å–∫ —Ç–µ–Ω–¥–µ—Ä–∞ –ñ–ö –ê–¥–º–∏—Ä–∞–ª
  console.log('üìã –®–∞–≥ 1: –ü–æ–∏—Å–∫ —Ç–µ–Ω–¥–µ—Ä–∞ –ñ–ö –ê–¥–º–∏—Ä–∞–ª...');
  const { data: tenders, error: tenderError } = await supabase
    .from('tenders')
    .select('id, title, tender_number, usd_rate, eur_rate, cny_rate')
    .ilike('title', '%–∞–¥–º–∏—Ä–∞–ª%');

  if (tenderError) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–Ω–¥–µ—Ä–æ–≤:', tenderError);
    return;
  }

  if (!tenders || tenders.length === 0) {
    console.error('‚ùå –¢–µ–Ω–¥–µ—Ä –ñ–ö –ê–¥–º–∏—Ä–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω');
    return;
  }

  console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ —Ç–µ–Ω–¥–µ—Ä–æ–≤: ${tenders.length}`);
  tenders.forEach((tender, index) => {
    console.log(`   ${index + 1}. ID: ${tender.id}`);
    console.log(`      –ù–∞–∑–≤–∞–Ω–∏–µ: ${tender.title}`);
    console.log(`      –ù–æ–º–µ—Ä: ${tender.tender_number || '–Ω–µ —É–∫–∞–∑–∞–Ω'}`);
    console.log(`      USD –∫—É—Ä—Å: ${tender.usd_rate || '–Ω–µ —É–∫–∞–∑–∞–Ω'}`);
  });

  const mainTender = tenders[0]; // –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–π –Ω–∞–π–¥–µ–Ω–Ω—ã–π
  console.log(`\nüéØ –í—ã–±—Ä–∞–Ω —Ç–µ–Ω–¥–µ—Ä: ${mainTender.title} (ID: ${mainTender.id})\n`);

  // 2. –ü–æ–∏—Å–∫ –ø–æ–∑–∏—Ü–∏–∏ 117
  console.log('üìã –®–∞–≥ 2: –ü–æ–∏—Å–∫ –ø–æ–∑–∏—Ü–∏–∏ 117 (–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –≥—Ä—É–Ω—Ç–∞)...');
  const { data: positions, error: posError } = await supabase
    .from('client_positions')
    .select('*')
    .eq('tender_id', mainTender.id)
    .eq('position_number', '117');

  if (posError) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–∑–∏—Ü–∏–π:', posError);
    return;
  }

  if (!positions || positions.length === 0) {
    console.log('‚ùå –ü–æ–∑–∏—Ü–∏—è 117 –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ü–æ–ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –ø–æ–∑–∏—Ü–∏–∏ —Å "—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞" –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏...');

    const { data: altPositions, error: altError } = await supabase
      .from('client_positions')
      .select('*')
      .eq('tender_id', mainTender.id)
      .ilike('work_name', '%—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞%');

    if (altError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞:', altError);
      return;
    }

    if (!altPositions || altPositions.length === 0) {
      console.log('‚ùå –ü–æ–∑–∏—Ü–∏–∏ —Å "—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞" –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
      return;
    }

    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ –ø–æ–∑–∏—Ü–∏–π —Å "—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞": ${altPositions.length}`);
    altPositions.forEach((pos, index) => {
      console.log(`   ${index + 1}. –ü–æ–∑–∏—Ü–∏—è ${pos.position_number}: ${pos.work_name}`);
      console.log(`      ID: ${pos.id}`);
      console.log(`      –¢–∏–ø: ${pos.item_type || '–Ω–µ —É–∫–∞–∑–∞–Ω'}`);
    });

    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–≤—É—é –Ω–∞–π–¥–µ–Ω–Ω—É—é –ø–æ–∑–∏—Ü–∏—é
    positions.push(altPositions[0]);
  } else {
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–∞ –ø–æ–∑–∏—Ü–∏—è 117`);
  }

  const targetPosition = positions[0];
  console.log(`\nüéØ –ò—Å—Å–ª–µ–¥—É–µ–º–∞—è –ø–æ–∑–∏—Ü–∏—è:`);
  console.log(`   –ù–æ–º–µ—Ä: ${targetPosition.position_number}`);
  console.log(`   –ù–∞–∑–≤–∞–Ω–∏–µ: ${targetPosition.work_name}`);
  console.log(`   ID: ${targetPosition.id}`);
  console.log(`   –¢–∏–ø: ${targetPosition.item_type || '–Ω–µ —É–∫–∞–∑–∞–Ω'}\n`);

  // 3. –ü–æ–ª—É—á–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤ –Ω–∞–∫—Ä—É—Ç–æ–∫
  console.log('üìã –®–∞–≥ 3: –ü–æ–ª—É—á–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤ –Ω–∞–∫—Ä—É—Ç–æ–∫...');
  const { data: markup, error: markupError } = await supabase
    .from('tender_markup_percentages')
    .select('*')
    .eq('tender_id', mainTender.id)
    .eq('is_active', true)
    .single();

  if (markupError) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤ –Ω–∞–∫—Ä—É—Ç–æ–∫:', markupError);
    return;
  }

  console.log('‚úÖ –ê–∫—Ç–∏–≤–Ω—ã–µ –ø—Ä–æ—Ü–µ–Ω—Ç—ã –Ω–∞–∫—Ä—É—Ç–æ–∫ –ø–æ–ª—É—á–µ–Ω—ã:');
  console.log(`   –†–∞–±–æ—Ç—ã 1.6: ${markup.works_16_markup}%`);
  console.log(`   –ú–µ—Ö–∞–Ω–∏–∑–∞—Ü–∏—è: ${markup.mechanization_service}%`);
  console.log(`   –ú–ë–ü+–ì–°–ú: ${markup.mbp_gsm}%`);
  console.log(`   –ì–∞—Ä–∞–Ω—Ç–∏–π–Ω—ã–π –ø–µ—Ä–∏–æ–¥: ${markup.warranty_period}%`);
  console.log(`   –†–æ—Å—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —Ä–∞–±–æ—Ç: ${markup.works_cost_growth}%`);
  console.log(`   –†–æ—Å—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤: ${markup.materials_cost_growth}%`);
  console.log(`   –†–æ—Å—Ç —Å—É–±—Ä–∞–±–æ—Ç: ${markup.subcontract_works_cost_growth}%`);
  console.log(`   –†–æ—Å—Ç —Å—É–±–º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤: ${markup.subcontract_materials_cost_growth}%`);
  console.log(`   –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω—ã–µ –∑–∞—Ç—Ä–∞—Ç—ã: ${markup.contingency_costs}%`);
  console.log(`   –û–û–ó —Å–æ–±—Å—Ç–≤. —Å–∏–ª—ã: ${markup.overhead_own_forces}%`);
  console.log(`   –û–û–ó —Å—É–±–ø–æ–¥—Ä—è–¥: ${markup.overhead_subcontract}%`);
  console.log(`   –û–§–ó (–±–µ–∑ —Å—É–±–ø–æ–¥—Ä—è–¥–∞): ${markup.general_costs_without_subcontract}%`);
  console.log(`   –ü—Ä–∏–±—ã–ª—å —Å–æ–±—Å—Ç–≤. —Å–∏–ª—ã: ${markup.profit_own_forces}%`);
  console.log(`   –ü—Ä–∏–±—ã–ª—å —Å—É–±–ø–æ–¥—Ä—è–¥: ${markup.profit_subcontract}%\n`);

  // 4. –ê–Ω–∞–ª–∏–∑ –±–∞–∑–æ–≤—ã—Ö —Å—Ç–æ–∏–º–æ—Å—Ç–µ–π
  console.log('üìã –®–∞–≥ 4: –ê–Ω–∞–ª–∏–∑ –±–∞–∑–æ–≤—ã—Ö –∏ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏—Ö —Å—Ç–æ–∏–º–æ—Å—Ç–µ–π...');

  const baseMaterials = parseFloat(targetPosition.total_materials_cost || '0');
  const baseWorks = parseFloat(targetPosition.total_works_cost || '0');
  const totalBase = baseMaterials + baseWorks;

  const commercialMaterials = parseFloat(targetPosition.total_commercial_materials_cost || '0');
  const commercialWorks = parseFloat(targetPosition.total_commercial_works_cost || '0');
  const totalCommercial = commercialMaterials + commercialWorks;

  console.log('üîπ –ë–∞–∑–æ–≤—ã–µ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ (–ü–ó):');
  console.log(`   –ú–∞—Ç–µ—Ä–∏–∞–ª—ã: ${baseMaterials.toLocaleString('ru-RU')} ‚ÇΩ`);
  console.log(`   –†–∞–±–æ—Ç—ã: ${baseWorks.toLocaleString('ru-RU')} ‚ÇΩ`);
  console.log(`   –ò–¢–û–ì–û –ü–ó: ${totalBase.toLocaleString('ru-RU')} ‚ÇΩ\n`);

  console.log('üîπ –ö–æ–º–º–µ—Ä—á–µ—Å–∫–∏–µ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ (–≤ –ë–î):');
  console.log(`   –ú–∞—Ç–µ—Ä–∏–∞–ª—ã –ö–ü: ${commercialMaterials.toLocaleString('ru-RU')} ‚ÇΩ`);
  console.log(`   –†–∞–±–æ—Ç—ã –ö–ü: ${commercialWorks.toLocaleString('ru-RU')} ‚ÇΩ`);
  console.log(`   –ò–¢–û–ì–û –ö–ü: ${totalCommercial.toLocaleString('ru-RU')} ‚ÇΩ\n`);

  // 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–∞ –ø–æ–∑–∏—Ü–∏–∏ –∏ –ø—Ä–∏–º–µ–Ω–∏–º—ã—Ö —Ñ–æ—Ä–º—É–ª
  console.log('üìã –®–∞–≥ 5: –ê–Ω–∞–ª–∏–∑ —Ç–∏–ø–∞ –ø–æ–∑–∏—Ü–∏–∏ –∏ —Ñ–æ—Ä–º—É–ª —Ä–∞—Å—á–µ—Ç–∞...');

  const itemType = targetPosition.item_type;
  const isSubcontractWork = itemType === 'sub_work';

  console.log(`üîç –¢–∏–ø –ø–æ–∑–∏—Ü–∏–∏: ${itemType}`);
  console.log(`üîç –Ø–≤–ª—è–µ—Ç—Å—è —Å—É–±–ø–æ–¥—Ä—è–¥–Ω–æ–π —Ä–∞–±–æ—Ç–æ–π: ${isSubcontractWork ? '–î–ê' : '–ù–ï–¢'}\n`);

  if (isSubcontractWork) {
    console.log('üìê –†–ê–°–ß–ï–¢ –î–õ–Ø –°–£–ë–ü–û–î–†–Ø–î–ù–´–• –†–ê–ë–û–¢:');
    console.log('   –§–æ—Ä–º—É–ª–∞ –¥–ª—è —Å—É–±–ø–æ–¥—Ä—è–¥–Ω—ã—Ö —Ä–∞–±–æ—Ç –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Å–∏–ª!\n');

    // –†–∞—Å—á–µ—Ç –¥–ª—è —Å—É–±–ø–æ–¥—Ä—è–¥–Ω—ã—Ö —Ä–∞–±–æ—Ç
    if (baseWorks > 0) {
      console.log('üîπ –†–∞—Å—á–µ—Ç —Å—É–±–ø–æ–¥—Ä—è–¥–Ω—ã—Ö —Ä–∞–±–æ—Ç:');

      // –®–∞–≥ 1: –†–æ—Å—Ç —Å—É–±—Ä–∞–±–æ—Ç
      const step1 = baseWorks * (1 + markup.subcontract_works_cost_growth / 100);
      console.log(`   –®–∞–≥ 1. –†–æ—Å—Ç —Å—É–±—Ä–∞–±–æ—Ç:`);
      console.log(`          ${baseWorks.toLocaleString('ru-RU')} √ó (1 + ${markup.subcontract_works_cost_growth}%) = ${step1.toLocaleString('ru-RU')} ‚ÇΩ`);

      // –®–∞–≥ 2: –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω—ã–µ –∑–∞—Ç—Ä–∞—Ç—ã
      const step2 = baseWorks * (1 + markup.contingency_costs / 100);
      console.log(`   –®–∞–≥ 2. –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω—ã–µ –∑–∞—Ç—Ä–∞—Ç—ã:`);
      console.log(`          ${baseWorks.toLocaleString('ru-RU')} √ó (1 + ${markup.contingency_costs}%) = ${step2.toLocaleString('ru-RU')} ‚ÇΩ`);

      // –®–∞–≥ 3: –û–û–ó —Å—É–±–ø–æ–¥—Ä—è–¥
      const step3 = (step1 + step2 - baseWorks) * (1 + markup.overhead_subcontract / 100);
      console.log(`   –®–∞–≥ 3. –û–û–ó —Å—É–±–ø–æ–¥—Ä—è–¥:`);
      console.log(`          (${step1.toLocaleString('ru-RU')} + ${step2.toLocaleString('ru-RU')} - ${baseWorks.toLocaleString('ru-RU')}) √ó (1 + ${markup.overhead_subcontract}%)`);
      console.log(`          = ${(step1 + step2 - baseWorks).toLocaleString('ru-RU')} √ó ${(1 + markup.overhead_subcontract / 100).toFixed(3)} = ${step3.toLocaleString('ru-RU')} ‚ÇΩ`);

      // –®–∞–≥ 4: –ü—Ä–∏–±—ã–ª—å —Å—É–±–ø–æ–¥—Ä—è–¥
      const step4 = step3 * (1 + markup.profit_subcontract / 100);
      console.log(`   –®–∞–≥ 4. –ü—Ä–∏–±—ã–ª—å —Å—É–±–ø–æ–¥—Ä—è–¥:`);
      console.log(`          ${step3.toLocaleString('ru-RU')} √ó (1 + ${markup.profit_subcontract}%) = ${step4.toLocaleString('ru-RU')} ‚ÇΩ`);

      console.log(`\n   üìç –ò–¢–û–ì–û–í–ê–Ø –ö–û–ú–ú–ï–†–ß–ï–°–ö–ê–Ø –°–¢–û–ò–ú–û–°–¢–¨ –°–£–ë–†–ê–ë–û–¢: ${step4.toLocaleString('ru-RU')} ‚ÇΩ`);

      const subMarkup = ((step4 - baseWorks) / baseWorks * 100).toFixed(1);
      console.log(`   üìà –û–±—â–∞—è –Ω–∞—Ü–µ–Ω–∫–∞ –Ω–∞ —Å—É–±—Ä–∞–±–æ—Ç—ã: ${subMarkup}%\n`);

      // –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –ë–î
      console.log('üéØ –°–†–ê–í–ù–ï–ù–ò–ï –° –î–ê–ù–ù–´–ú–ò –í –ë–î:');
      console.log(`   –†–∞—Å—Å—á–∏—Ç–∞–Ω–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: ${step4.toLocaleString('ru-RU')} ‚ÇΩ`);
      console.log(`   –í –ë–î —Ä–∞–±–æ—Ç—ã –ö–ü: ${commercialWorks.toLocaleString('ru-RU')} ‚ÇΩ`);

      const difference = Math.abs(step4 - commercialWorks);
      const percentDiff = commercialWorks > 0 ? (difference / commercialWorks * 100).toFixed(2) : '‚àû';

      if (difference > 1) {
        console.log(`   ‚ö†Ô∏è –†–ê–°–•–û–ñ–î–ï–ù–ò–ï: ${difference.toLocaleString('ru-RU')} ‚ÇΩ (${percentDiff}%)`);
        console.log(`   üö® –í–û–ó–ú–û–ñ–ù–ê–Ø –ü–†–û–ë–õ–ï–ú–ê: –ë–î —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–µ–≤–µ—Ä–Ω—É—é –∫–æ–º–º–µ—Ä—á–µ—Å–∫—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å!`);
      } else {
        console.log(`   ‚úÖ –ó–Ω–∞—á–µ–Ω–∏—è —Å–æ–≤–ø–∞–¥–∞—é—Ç (—Ä–∞—Å—Ö–æ–∂–¥–µ–Ω–∏–µ < 1 ‚ÇΩ)`);
      }
    }

    if (baseMaterials > 0) {
      console.log('\nüîπ –†–∞—Å—á–µ—Ç —Å—É–±–ø–æ–¥—Ä—è–¥–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤:');

      // –®–∞–≥ 1: –†–æ—Å—Ç —Å—É–±–º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤
      const step1 = baseMaterials * (1 + markup.subcontract_materials_cost_growth / 100);
      console.log(`   –®–∞–≥ 1. –†–æ—Å—Ç —Å—É–±–º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤:`);
      console.log(`          ${baseMaterials.toLocaleString('ru-RU')} √ó (1 + ${markup.subcontract_materials_cost_growth}%) = ${step1.toLocaleString('ru-RU')} ‚ÇΩ`);

      // –®–∞–≥ 2: –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω—ã–µ –∑–∞—Ç—Ä–∞—Ç—ã
      const step2 = baseMaterials * (1 + markup.contingency_costs / 100);
      console.log(`   –®–∞–≥ 2. –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω—ã–µ –∑–∞—Ç—Ä–∞—Ç—ã:`);
      console.log(`          ${baseMaterials.toLocaleString('ru-RU')} √ó (1 + ${markup.contingency_costs}%) = ${step2.toLocaleString('ru-RU')} ‚ÇΩ`);

      // –®–∞–≥ 3: –û–û–ó —Å—É–±–ø–æ–¥—Ä—è–¥
      const step3 = (step1 + step2 - baseMaterials) * (1 + markup.overhead_subcontract / 100);
      console.log(`   –®–∞–≥ 3. –û–û–ó —Å—É–±–ø–æ–¥—Ä—è–¥:`);
      console.log(`          (${step1.toLocaleString('ru-RU')} + ${step2.toLocaleString('ru-RU')} - ${baseMaterials.toLocaleString('ru-RU')}) √ó (1 + ${markup.overhead_subcontract}%)`);
      console.log(`          = ${(step1 + step2 - baseMaterials).toLocaleString('ru-RU')} √ó ${(1 + markup.overhead_subcontract / 100).toFixed(3)} = ${step3.toLocaleString('ru-RU')} ‚ÇΩ`);

      // –®–∞–≥ 4: –ü—Ä–∏–±—ã–ª—å —Å—É–±–ø–æ–¥—Ä—è–¥
      const step4 = step3 * (1 + markup.profit_subcontract / 100);
      console.log(`   –®–∞–≥ 4. –ü—Ä–∏–±—ã–ª—å —Å—É–±–ø–æ–¥—Ä—è–¥:`);
      console.log(`          ${step3.toLocaleString('ru-RU')} √ó (1 + ${markup.profit_subcontract}%) = ${step4.toLocaleString('ru-RU')} ‚ÇΩ`);

      console.log(`\n   üìç –ò–¢–û–ì–û–í–ê–Ø –ö–û–ú–ú–ï–†–ß–ï–°–ö–ê–Ø –°–¢–û–ò–ú–û–°–¢–¨ –°–£–ë–ú–ê–¢–ï–†–ò–ê–õ–û–í: ${step4.toLocaleString('ru-RU')} ‚ÇΩ`);

      // –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –ë–î
      console.log('\nüéØ –°–†–ê–í–ù–ï–ù–ò–ï –° –î–ê–ù–ù–´–ú–ò –í –ë–î:');
      console.log(`   –†–∞—Å—Å—á–∏—Ç–∞–Ω–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: ${step4.toLocaleString('ru-RU')} ‚ÇΩ`);
      console.log(`   –í –ë–î –º–∞—Ç–µ—Ä–∏–∞–ª—ã –ö–ü: ${commercialMaterials.toLocaleString('ru-RU')} ‚ÇΩ`);

      const difference = Math.abs(step4 - commercialMaterials);
      const percentDiff = commercialMaterials > 0 ? (difference / commercialMaterials * 100).toFixed(2) : '‚àû';

      if (difference > 1) {
        console.log(`   ‚ö†Ô∏è –†–ê–°–•–û–ñ–î–ï–ù–ò–ï: ${difference.toLocaleString('ru-RU')} ‚ÇΩ (${percentDiff}%)`);
        console.log(`   üö® –í–û–ó–ú–û–ñ–ù–ê–Ø –ü–†–û–ë–õ–ï–ú–ê: –ë–î —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–µ–≤–µ—Ä–Ω—É—é –∫–æ–º–º–µ—Ä—á–µ—Å–∫—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å!`);
      } else {
        console.log(`   ‚úÖ –ó–Ω–∞—á–µ–Ω–∏—è —Å–æ–≤–ø–∞–¥–∞—é—Ç (—Ä–∞—Å—Ö–æ–∂–¥–µ–Ω–∏–µ < 1 ‚ÇΩ)`);
      }
    }

  } else {
    console.log('üìê –†–ê–°–ß–ï–¢ –î–õ–Ø –°–û–ë–°–¢–í–ï–ù–ù–´–• –°–ò–õ:');
    console.log('   –ü–æ–∑–∏—Ü–∏—è –ù–ï —è–≤–ª—è–µ—Ç—Å—è —Å—É–±–ø–æ–¥—Ä—è–¥–Ω–æ–π —Ä–∞–±–æ—Ç–æ–π, –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è —Ñ–æ—Ä–º—É–ª–∞\n');

    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Ä–∞—Å—á–µ—Ç –¥–ª—è —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Å–∏–ª, –∫–∞–∫ –≤ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–º —Å–∫—Ä–∏–ø—Ç–µ
    // –ù–æ —Ç–∞–∫ –∫–∞–∫ –º—ã –∏—Å—Å–ª–µ–¥—É–µ–º –∏–º–µ–Ω–Ω–æ –ø—Ä–æ–±–ª–µ–º—É —Å —Å—É–±–ø–æ–¥—Ä—è–¥–Ω—ã–º–∏ —Ä–∞–±–æ—Ç–∞–º–∏,
    // —Å–æ—Å—Ä–µ–¥–æ—Ç–æ—á–∏–º—Å—è –Ω–∞ –∞–Ω–∞–ª–∏–∑–µ
  }

  console.log('\n‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê');
  console.log('üìä –ò–¢–û–ì–û–í–´–ô –ê–ù–ê–õ–ò–ó:');
  console.log(`   –¢–µ–Ω–¥–µ—Ä: ${mainTender.title}`);
  console.log(`   –ü–æ–∑–∏—Ü–∏—è: ${targetPosition.position_number} - ${targetPosition.work_name}`);
  console.log(`   –¢–∏–ø –ø–æ–∑–∏—Ü–∏–∏: ${itemType}`);
  console.log(`   –ë–∞–∑–æ–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: ${totalBase.toLocaleString('ru-RU')} ‚ÇΩ`);
  console.log(`   –ö–æ–º–º–µ—Ä—á–µ—Å–∫–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –≤ –ë–î: ${totalCommercial.toLocaleString('ru-RU')} ‚ÇΩ`);

  if (totalBase > 0) {
    const totalMarkup = ((totalCommercial - totalBase) / totalBase * 100).toFixed(1);
    console.log(`   –û–±—â–∞—è –Ω–∞—Ü–µ–Ω–∫–∞: ${totalMarkup}%`);
  }

  console.log('\n‚úÖ –ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
}

investigateAdmiralTender()
  .then(() => {
    console.log('\nüéâ –ê–Ω–∞–ª–∏–∑ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω');
    process.exit(0);
  })
  .catch((error) => {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ:', error);
    process.exit(1);
  });