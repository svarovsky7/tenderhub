/**
 * Script to recalculate commercial costs for subcontract positions
 * Specifically fixes positions that should have subcontract markup
 */
import { createClient } from '@supabase/supabase-js';
import * as dotenv from 'dotenv';
import * as path from 'path';

// Load environment variables
dotenv.config({ path: path.resolve(process.cwd(), '.env.local') });

const supabaseUrl = process.env.VITE_SUPABASE_URL;
const supabaseAnonKey = process.env.VITE_SUPABASE_ANON_KEY;

if (!supabaseUrl || !supabaseAnonKey) {
  console.error('‚ùå Missing required environment variables');
  process.exit(1);
}

const supabase = createClient(supabaseUrl, supabaseAnonKey);

// –§—É–Ω–∫—Ü–∏—è —Ä–∞—Å—á–µ—Ç–∞ –¥–ª—è —Å—É–±–ø–æ–¥—Ä—è–¥–Ω—ã—Ö —Ä–∞–±–æ—Ç
function calculateSubWorkCommercial(base: number, markups: any): number {
  if (base === 0) return 0;

  // –§–æ—Ä–º—É–ª–∞ –¥–ª—è —Å—É–±–ø–æ–¥—Ä—è–¥–Ω—ã—Ö —Ä–∞–±–æ—Ç –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç –æ–±—ã—á–Ω—ã—Ö —Ä–∞–±–æ—Ç
  // –ü—Ä–∏–º–µ–Ω—è—é—Ç—Å—è —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–æ—Ü–µ–Ω—Ç—ã –¥–ª—è —Å—É–±–ø–æ–¥—Ä—è–¥–∞
  const step1 = base * (1 + (markups.subcontract_works_cost_growth || 0) / 100);
  const step2 = base * (1 + (markups.contingency_costs || 0) / 100);
  const step3 = (step1 + step2 - base) * (1 + (markups.overhead_subcontract || 0) / 100);
  const step4 = step3 * (1 + (markups.general_costs_without_subcontract || 0) / 100);
  const step5 = step4 * (1 + (markups.profit_subcontract || 0) / 100);

  return step5;
}

// –§—É–Ω–∫—Ü–∏—è —Ä–∞—Å—á–µ—Ç–∞ –¥–ª—è —Å—É–±–ø–æ–¥—Ä—è–¥–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤
function calculateSubMaterialCommercial(base: number, markups: any): number {
  if (base === 0) return 0;

  const step1 = base * (1 + (markups.subcontract_materials_cost_growth || 0) / 100);
  const step2 = base * (1 + (markups.contingency_costs || 0) / 100);
  const step3 = (step1 + step2 - base) * (1 + (markups.overhead_subcontract || 0) / 100);
  const step4 = step3 * (1 + (markups.general_costs_without_subcontract || 0) / 100);
  const step5 = step4 * (1 + (markups.profit_subcontract || 0) / 100);

  return step5;
}

async function recalculateSubcontract() {
  const tenderId = '736dc11c-33dc-4fce-a7ee-c477abb8b694'; // –ñ–ö –ê–¥–º–∏—Ä–∞–ª

  console.log('üîÑ –ü–µ—Ä–µ—Å—á–µ—Ç –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏—Ö —Å—Ç–æ–∏–º–æ—Å—Ç–µ–π —Å—É–±–ø–æ–¥—Ä—è–¥–Ω—ã—Ö –ø–æ–∑–∏—Ü–∏–π\n');
  console.log('üìã –¢–µ–Ω–¥–µ—Ä: –ñ–ö –ê–¥–º–∏—Ä–∞–ª\n');

  // –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ—Ü–µ–Ω—Ç—ã –Ω–∞–∫—Ä—É—Ç–æ–∫
  const { data: markup, error: markupError } = await supabase
    .from('tender_markup_percentages')
    .select('*')
    .eq('tender_id', tenderId)
    .eq('is_active', true)
    .single();

  if (markupError || !markup) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤ –Ω–∞–∫—Ä—É—Ç–æ–∫:', markupError);
    return;
  }

  console.log('üìä –ü—Ä–æ—Ü–µ–Ω—Ç—ã –Ω–∞–∫—Ä—É—Ç–æ–∫ –¥–ª—è —Å—É–±–ø–æ–¥—Ä—è–¥–∞:');
  console.log(`   –†–æ—Å—Ç —Å—É–±–ø–æ–¥—Ä—è–¥–Ω—ã—Ö —Ä–∞–±–æ—Ç: ${markup.subcontract_works_cost_growth}%`);
  console.log(`   –†–æ—Å—Ç —Å—É–±–ø–æ–¥—Ä—è–¥–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤: ${markup.subcontract_materials_cost_growth}%`);
  console.log(`   –û–û–ó —Å—É–±–ø–æ–¥—Ä—è–¥: ${markup.overhead_subcontract}%`);
  console.log(`   –ü—Ä–∏–±—ã–ª—å —Å—É–±–ø–æ–¥—Ä—è–¥: ${markup.profit_subcontract}%\n`);

  // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –ø–æ–∑–∏—Ü–∏–∏ —Å BOQ items —Ç–∏–ø–∞ sub_work –∏–ª–∏ sub_material
  const { data: subPositions, error: posError } = await supabase
    .from('client_positions')
    .select(`
      *,
      boq_items!inner(
        id,
        item_type,
        description,
        quantity,
        unit_rate,
        total_amount
      )
    `)
    .eq('tender_id', tenderId)
    .or('item_type.eq.sub_work,item_type.eq.sub_material', { foreignTable: 'boq_items' });

  if (posError) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–∑–∏—Ü–∏–π:', posError);
    return;
  }

  // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ –ø–æ–∑–∏—Ü–∏—è–º –∏ —Å—É–º–º–∏—Ä—É–µ–º
  const positionMap = new Map();

  for (const position of subPositions || []) {
    const posId = position.id;

    if (!positionMap.has(posId)) {
      positionMap.set(posId, {
        ...position,
        sub_work_base: 0,
        sub_material_base: 0,
        sub_work_items: [],
        sub_material_items: []
      });
    }

    const pos = positionMap.get(posId);

    // –°—É–º–º–∏—Ä—É–µ–º –±–∞–∑–æ–≤—ã–µ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –ø–æ —Ç–∏–ø–∞–º
    for (const item of position.boq_items || []) {
      if (item.item_type === 'sub_work') {
        pos.sub_work_base += item.total_amount || 0;
        pos.sub_work_items.push(item);
      } else if (item.item_type === 'sub_material') {
        pos.sub_material_base += item.total_amount || 0;
        pos.sub_material_items.push(item);
      }
    }
  }

  console.log(`üìå –ù–∞–π–¥–µ–Ω–æ ${positionMap.size} –ø–æ–∑–∏—Ü–∏–π —Å —Å—É–±–ø–æ–¥—Ä—è–¥–Ω—ã–º–∏ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏\n`);

  let updatedCount = 0;
  const updates = [];

  // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥—É—é –ø–æ–∑–∏—Ü–∏—é
  for (const [posId, position] of positionMap) {
    const subWorkBase = position.sub_work_base;
    const subMaterialBase = position.sub_material_base;

    if (subWorkBase > 0 || subMaterialBase > 0) {
      // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏–µ —Å—Ç–æ–∏–º–æ—Å—Ç–∏
      const subWorkCommercial = calculateSubWorkCommercial(subWorkBase, markup);
      const subMaterialCommercial = calculateSubMaterialCommercial(subMaterialBase, markup);

      // –¢–∞–∫–∂–µ –Ω—É–∂–Ω–æ —É—á–µ—Å—Ç—å –æ–±—ã—á–Ω—ã–µ —Ä–∞–±–æ—Ç—ã –∏ –º–∞—Ç–µ—Ä–∏–∞–ª—ã, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
      const currentWorkCommercial = parseFloat(position.total_commercial_works_cost || '0');
      const currentMaterialCommercial = parseFloat(position.total_commercial_materials_cost || '0');

      console.log(`\nüìç –ü–æ–∑–∏—Ü–∏—è ‚Ññ${position.position_number}: ${position.work_name?.substring(0, 40)}...`);

      if (subWorkBase > 0) {
        console.log(`   –°—É–±–ø–æ–¥—Ä—è–¥–Ω—ã–µ —Ä–∞–±–æ—Ç—ã:`);
        console.log(`      –ë–∞–∑–∞: ${subWorkBase.toLocaleString('ru-RU')} ‚ÇΩ`);
        console.log(`      –ö–æ–º–º–µ—Ä—á–µ—Å–∫–∞—è: ${Math.round(subWorkCommercial).toLocaleString('ru-RU')} ‚ÇΩ`);
        console.log(`      –ù–∞—Ü–µ–Ω–∫–∞: ${((subWorkCommercial - subWorkBase) / subWorkBase * 100).toFixed(1)}%`);
      }

      if (subMaterialBase > 0) {
        console.log(`   –°—É–±–ø–æ–¥—Ä—è–¥–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã:`);
        console.log(`      –ë–∞–∑–∞: ${subMaterialBase.toLocaleString('ru-RU')} ‚ÇΩ`);
        console.log(`      –ö–æ–º–º–µ—Ä—á–µ—Å–∫–∞—è: ${Math.round(subMaterialCommercial).toLocaleString('ru-RU')} ‚ÇΩ`);
        console.log(`      –ù–∞—Ü–µ–Ω–∫–∞: ${((subMaterialCommercial - subMaterialBase) / subMaterialBase * 100).toFixed(1)}%`);
      }

      updates.push({
        id: posId,
        position_number: position.position_number,
        work_name: position.work_name,
        sub_work_commercial: subWorkCommercial,
        sub_material_commercial: subMaterialCommercial
      });
    }
  }

  // –ü—Ä–∏–º–µ–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
  console.log('\n‚ö° –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏—Ö —Å—Ç–æ–∏–º–æ—Å—Ç–µ–π –≤ –ë–î...\n');

  for (const update of updates) {
    // –î–ª—è —Å—É–±–ø–æ–¥—Ä—è–¥–Ω—ã—Ö —Ä–∞–±–æ—Ç –æ–±–Ω–æ–≤–ª—è–µ–º total_commercial_works_cost
    // –î–ª—è —Å—É–±–ø–æ–¥—Ä—è–¥–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –æ–±–Ω–æ–≤–ª—è–µ–º total_commercial_materials_cost
    const updateData: any = {};

    if (update.sub_work_commercial > 0) {
      updateData.total_commercial_works_cost = update.sub_work_commercial;
    }
    if (update.sub_material_commercial > 0) {
      updateData.total_commercial_materials_cost = update.sub_material_commercial;
    }

    const { error: updateError } = await supabase
      .from('client_positions')
      .update(updateData)
      .eq('id', update.id);

    if (updateError) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–∑–∏—Ü–∏–∏ ${update.position_number}:`, updateError);
    } else {
      updatedCount++;
    }
  }

  console.log(`\n‚úÖ –£—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ ${updatedCount} –ø–æ–∑–∏—Ü–∏–π`);

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–∑–∏—Ü–∏—é 117
  const { data: position117, error: pos117Error } = await supabase
    .from('client_positions')
    .select('*')
    .eq('tender_id', tenderId)
    .eq('position_number', 117)
    .single();

  if (!pos117Error && position117) {
    console.log('\nüéØ –ü–æ–∑–∏—Ü–∏—è 117 (–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –≥—Ä—É–Ω—Ç–∞ - —Å—É–±-—Ä–∞–±):');
    console.log(`   –ë–∞–∑–∞ —Ä–∞–±–æ—Ç: ${parseFloat(position117.total_works_cost || '0').toLocaleString('ru-RU')} ‚ÇΩ`);
    console.log(`   –ö–æ–º–º–µ—Ä—á–µ—Å–∫–∞—è —Ä–∞–±–æ—Ç: ${parseFloat(position117.total_commercial_works_cost || '0').toLocaleString('ru-RU')} ‚ÇΩ`);

    const base = parseFloat(position117.total_works_cost || '0');
    const commercial = parseFloat(position117.total_commercial_works_cost || '0');
    if (base > 0) {
      const markupPercent = ((commercial - base) / base * 100).toFixed(1);
      console.log(`   –ù–∞—Ü–µ–Ω–∫–∞: ${markupPercent}%`);
    }
  }
}

recalculateSubcontract()
  .then(() => {
    console.log('\n‚úÖ –°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ');
    console.log('\nüìå –û–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏—Ö —Å—Ç–æ–∏–º–æ—Å—Ç–µ–π –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π');
    process.exit(0);
  })
  .catch((error) => {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
    process.exit(1);
  });