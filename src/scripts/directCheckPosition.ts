/**
 * Direct check of position values in database
 */
import { createClient } from '@supabase/supabase-js';
import * as dotenv from 'dotenv';
import * as path from 'path';

// Load environment variables
dotenv.config({ path: path.resolve(process.cwd(), '.env.local') });

const supabaseUrl = process.env.VITE_SUPABASE_URL;
const supabaseAnonKey = process.env.VITE_SUPABASE_ANON_KEY;

if (!supabaseUrl || !supabaseAnonKey) {
  console.error('‚ùå Missing required environment variables');
  process.exit(1);
}

const supabase = createClient(supabaseUrl, supabaseAnonKey);

async function directCheck() {
  const positionId = 'eff22792-c2c1-4dc0-ab3f-83c182952708';

  console.log('üîç –ü—Ä—è–º–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–∑–∏—Ü–∏–∏ –≤ –ë–î');
  console.log(`   ID: ${positionId}\n`);

  // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –Ω–∞–ø—Ä—è–º—É—é
  const { data, error } = await supabase
    .from('client_positions')
    .select('position_number, work_name, total_materials_cost, total_works_cost, total_commercial_materials_cost, total_commercial_works_cost')
    .eq('id', positionId)
    .single();

  if (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞:', error);
    return;
  }

  console.log('üìä –¢–µ–∫—É—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –≤ –ë–î:');
  console.log(`   –ü–æ–∑–∏—Ü–∏—è ‚Ññ${data.position_number}: ${data.work_name}\n`);

  console.log('   –ë–∞–∑–æ–≤—ã–µ —Å—Ç–æ–∏–º–æ—Å—Ç–∏:');
  console.log(`      –ú–∞—Ç–µ—Ä–∏–∞–ª—ã: ${parseFloat(data.total_materials_cost).toLocaleString('ru-RU')} ‚ÇΩ`);
  console.log(`      –†–∞–±–æ—Ç—ã: ${parseFloat(data.total_works_cost).toLocaleString('ru-RU')} ‚ÇΩ\n`);

  console.log('   –ö–æ–º–º–µ—Ä—á–µ—Å–∫–∏–µ —Å—Ç–æ–∏–º–æ—Å—Ç–∏:');
  const commercialMaterials = parseFloat(data.total_commercial_materials_cost);
  const commercialWorks = parseFloat(data.total_commercial_works_cost);

  console.log(`      –ú–∞—Ç–µ—Ä–∏–∞–ª—ã –ö–ü: ${commercialMaterials.toLocaleString('ru-RU')} ‚ÇΩ`);
  console.log(`      –†–∞–±–æ—Ç—ã –ö–ü: ${commercialWorks.toLocaleString('ru-RU')} ‚ÇΩ`);

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Ç—Ä–∏–ª–ª–∏–æ–Ω–Ω—ã–µ –ª–∏ —ç—Ç–æ –∑–Ω–∞—á–µ–Ω–∏—è
  if (commercialMaterials > 1000000000) {
    console.log(`      ‚ö†Ô∏è –ú–ê–¢–ï–†–ò–ê–õ–´ - –¢–†–ò–õ–õ–ò–û–ù–ù–û–ï –ó–ù–ê–ß–ï–ù–ò–ï! (${commercialMaterials.toExponential(2)})`);
  }

  if (commercialWorks > 1000000000) {
    console.log(`      ‚ö†Ô∏è –†–ê–ë–û–¢–´ - –¢–†–ò–õ–õ–ò–û–ù–ù–û–ï –ó–ù–ê–ß–ï–ù–ò–ï! (${commercialWorks.toExponential(2)})`);
  }

  console.log(`\n   –ò–¢–û–ì–û –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∞—è: ${(commercialMaterials + commercialWorks).toLocaleString('ru-RU')} ‚ÇΩ`);

  // –¢–µ–ø–µ—Ä—å –ø–æ–ø—Ä–æ–±—É–µ–º –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
  console.log('\nüîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è...');

  const correctMaterials = 49222800;
  const correctWorks = 7797240;

  const { error: updateError } = await supabase
    .from('client_positions')
    .update({
      total_commercial_materials_cost: correctMaterials,
      total_commercial_works_cost: correctWorks
    })
    .eq('id', positionId);

  if (updateError) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:', updateError);
  } else {
    console.log('‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!');
    console.log(`   –ù–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è:`);
    console.log(`      –ú–∞—Ç–µ—Ä–∏–∞–ª—ã –ö–ü: ${correctMaterials.toLocaleString('ru-RU')} ‚ÇΩ`);
    console.log(`      –†–∞–±–æ—Ç—ã –ö–ü: ${correctWorks.toLocaleString('ru-RU')} ‚ÇΩ`);
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
  console.log('\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è...');

  const { data: checkData, error: checkError } = await supabase
    .from('client_positions')
    .select('total_commercial_materials_cost, total_commercial_works_cost')
    .eq('id', positionId)
    .single();

  if (checkError) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏:', checkError);
  } else {
    const newMaterials = parseFloat(checkData.total_commercial_materials_cost);
    const newWorks = parseFloat(checkData.total_commercial_works_cost);

    console.log('üìä –§–∏–Ω–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –≤ –ë–î:');
    console.log(`   –ú–∞—Ç–µ—Ä–∏–∞–ª—ã –ö–ü: ${newMaterials.toLocaleString('ru-RU')} ‚ÇΩ`);
    console.log(`   –†–∞–±–æ—Ç—ã –ö–ü: ${newWorks.toLocaleString('ru-RU')} ‚ÇΩ`);

    if (newMaterials === correctMaterials && newWorks === correctWorks) {
      console.log('\n‚úÖ –£–°–ü–ï–•! –ó–Ω–∞—á–µ–Ω–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ!');
    } else {
      console.log('\n‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï! –ó–Ω–∞—á–µ–Ω–∏—è –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –æ–∂–∏–¥–∞–µ–º—ã–º!');
    }
  }
}

directCheck()
  .then(() => {
    console.log('\n‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
    process.exit(0);
  })
  .catch((error) => {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
    process.exit(1);
  });